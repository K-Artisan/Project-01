<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\Common\Model.cs" %>
<%@ Assembly Src="..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
<%-- 驼峰形式类名 --%>
<% string CamelClassName = SafeClassName.ToCamelCase(); %>
@model <%= SafeClassName %>Dto
@{
    var x = @Html.EasyUi();
}
@section head {
    <script type="text/javascript">
        $(function () {
            $.easyui.deleteUrl = "/<%= Namespace %>/<%= CamelClassName %>/delete";
        });
    </script>
}
@section top {
    @*工具栏*@
    <div class="toolbar">
        @x.DialogButton( "添加<%= Description %>", "/<%= Namespace %>/<%= CamelClassName %>/add" ).Icon( "icon-add" ).Plain()
        @x.DialogButton( "编辑<%= Description %>", "/<%= Namespace %>/<%= CamelClassName %>/edit" ).Id( "btnEdit" ).Icon( "icon-edit" ).Plain().ShowEditDialog()
        @x.Button( "删除<%= Description %>" ).Icon( "icon-delete" ).Plain().Delete()
        @x.DialogButton( "查看详细", "/<%= Namespace %>/<%= CamelClassName %>/detail" ).Id( "btnLook" ).Icon( "icon-look" ).Plain().ShowDetailDialog()
        @x.Button( "刷 新" ).Icon( "icon-refresh" ).Plain().Refresh()
    </div>
}
@section content {
    @*右键菜单*@
    @Html.Partial( "Menus/FormMenu" )
    @*查询表单*@
    @Html.Partial( "Parts/QueryForm" )
    @*表格*@
    @(x.Grid( "grid" ).Sort( "<%= Entity.GetOrderBy() %>" ).Toolbar( "divQuery" ).Url( "/<%= Namespace %>/<%= SafeClassName %>/Query" )
        .ShowEditDialogByDblClick().Menu().FitColumns().Fit()
        .Columns(
        <% foreach(Property p in Entity.GetProperties() ) { %>
        <% if( p.IsKey ) {%>
            x.GridColumn( t => t.Id ).CheckBox(),
        <% continue; } %>
            x.GridColumn( t => t.<%= p.PropertyName.ToSafeName() %>,<%=p.GetGridColumnWidth()%> )<%= Entity.GetComma(p) %>
        <% }%>
        )
    )
}