<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\Common\Model.cs" %>
<%@ Assembly Src="..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
using System;
using System.Collections.Generic;
using Util;
using <%= Namespace %>.Domains.Models;

namespace <%= Namespace %>.Tests.Models.<%= SafeClassName.ToPlural() %> {
    /// <summary>
    /// <%= Description %>测试数据
    /// </summary>
    public partial class <%= SafeClassName %>Test {
        
        #region 测试数据1
        
        <% foreach(Property p in Entity.Properties) { %>
        /// <summary>
        /// <%= p.Description %>
        /// </summary>
        <% if( p.IsPrimaryKey.SafeValue() ){ %>
        public static readonly <%= p.TypeName %> Id = "<%= Guid.NewGuid() %>"<%=Entity.GetToEntityConvert() %>;
        <%continue;} %>
        <% if( p.DataType == DbType.Guid ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = "<%= Guid.NewGuid() %>".ToGuid();
        <%continue;} %>
        <% if( p.DataType == DbType.Int32 ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = 1;
        <%continue;} %>
        <% if( p.DataType == DbType.DateTime ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = Conv.ToDate( "<%= DateTime.Now %>" );
        <%continue;} %>
        <% if( p.DataType == DbType.Binary ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = File.StringToBytes( "1" );
        <%continue;} %>
        <% if( p.DataType == DbType.Boolean ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = true;
        <%continue;} %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %> = "<%= p.PropertyName.ToSafeName() %>";
        <% }%>
        
        #endregion
        
        #region 测试数据2
        
        <% foreach(Property p in Entity.Properties) { %>
        /// <summary>
        /// <%= p.Description %>
        /// </summary>
        <% if( p.IsPrimaryKey.SafeValue() ){ %>
        public static readonly <%= p.TypeName %> Id2 = "<%= Guid.NewGuid() %>"<%=Entity.GetToEntityConvert() %>;
        <%continue;} %>
        <% if( p.DataType == DbType.Guid ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = "<%= Guid.NewGuid() %>".ToGuid();
        <%continue;} %>
        <% if( p.DataType == DbType.Int32 ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = 2;
        <%continue;} %>
        <% if( p.DataType == DbType.DateTime ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = Conv.ToDate( "<%= DateTime.Now.AddDays(1) %>" );
        <%continue;} %>
        <% if( p.DataType == DbType.Binary ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = File.StringToBytes( "2" );
        <%continue;} %>
        <% if( p.DataType == DbType.Boolean ){ %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = true;
        <%continue;} %>
        public static readonly <%= p.TypeName %> <%= p.PropertyName.ToSafeName() %>2 = "<%= p.PropertyName.ToSafeName() %>2";
        <% }%>
        
        #endregion
        
        #region Create(创建实体)
        
        /// <summary>
        /// 创建<%= Description %>实体
        /// </summary>
        public static <%= SafeClassName %> Create() {
            return new <%= SafeClassName %>( Id ) {
            <% foreach(Property p in Entity.Properties) { %>
            <% if( p.IsPrimaryKey.SafeValue() ) continue; %>
                <%= p.PropertyName.ToSafeName() %> = <%= p.PropertyName.ToSafeName() %>,
            <% }%>
            };
        }
        
        /// <summary>
        /// 创建<%= Description %>实体2
        /// </summary>
        /// <param name="id"><%= Description %>编号</param>
        public static <%= SafeClassName %> Create2( <%= Entity.GetId().TypeName %> id ) {
            return new <%= SafeClassName %>( id ) {
            <% foreach(Property p in Entity.Properties) { %>
            <% if( p.IsPrimaryKey.SafeValue() ) continue; %>
                <%= p.PropertyName.ToSafeName() %> = <%= p.PropertyName.ToSafeName() %>2,
            <% }%>
            };
        }
        
        #endregion
        
        #region CreateList(创建列表)

        /// <summary>
        /// 创建列表
        /// </summary>
        public static List<<%= SafeClassName %>> CreateList() {
            return new List<<%= SafeClassName %>>() {
                Create(),
                Create2( Id2 )
            };
        }

        #endregion
    }
}
