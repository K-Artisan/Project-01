<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\Common\Model.cs" %>
<%@ Assembly Src="..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Namespace" Type="System.String" %>
<%@ Property Name="UnitOfWork" Type="System.String"  %>
<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="IUnitOfWorkNamespace" Type="System.String"  %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
using Util;
using Util.Domains.Repositories;
using Util.Datas.Queries;
using Util.ApplicationServices;
using <%= Entity.GetNamespace(Namespace,"Domains","Models") %>;
using <%= Entity.GetNamespace(Namespace,"Domains","Queries") %>;
using <%= Entity.GetNamespace(Namespace,"Domains","Repositories") %>;
using <%= Entity.GetNamespace(Namespace,"Services.Dtos") %>;
using <%= Entity.GetNamespace(Namespace,"Services.Contracts") %>;

namespace <%= Entity.GetNamespace(Namespace,"Services.Impl") %> {
    /// <summary>
    /// <%= Description %>服务
    /// </summary>
    public class <%= SafeClassName %>Service : BatchService<<%= SafeClassName %>, <%= SafeClassName %>Dto, <%= SafeClassName %>Query<%= Entity.GetKeyTypeNoContainsGuid() %>>, I<%= SafeClassName %>Service {
        
        #region 构造方法
        
        /// <summary>
        /// 初始化<%= Description %>服务
        /// </summary>
        /// <param name="unitOfWork">工作单元</param>
        /// <param name="repository"><%= Description %>仓储</param>
        public <%= SafeClassName %>Service( I<%= UnitOfWork %> unitOfWork, I<%= SafeClassName %>Repository repository )
            : base( unitOfWork, repository ) {
            Repository = repository;
        }
        
        #endregion

        #region 属性
        
        /// <summary>
        /// <%= Description %>仓储
        /// </summary>
        protected new I<%= SafeClassName %>Repository Repository { get; set; }
        
        #endregion
        
        #region 实体与Dto转换

        /// <summary>
        /// 转换为Dto
        /// </summary>
        /// <param name="entity">实体</param>
        protected override <%= SafeClassName %>Dto ToDto( <%= SafeClassName %> entity ) {
            return entity.ToDto();
        }

        /// <summary>
        /// 转换为实体
        /// </summary>
        /// <param name="dto">数据传输对象</param>
        protected override <%= SafeClassName %> ToEntity( <%= SafeClassName %>Dto dto ) {
            return dto.ToEntity();
        }
        
        #endregion
        
        #region GetQuery(查询)

        /// <summary>
        /// 获取查询对象
        /// </summary>
        /// <param name="query"><%= Description %>查询参数</param>
        public override IQueryBase<<%= SafeClassName %>> GetQuery( <%= SafeClassName %>Query query ) {
            return new Query<<%= SafeClassName %><%= Entity.GetKeyTypeNoContainsGuid() %>>( query );
        }
        
        #endregion
    }
}