<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Util.Webs.EasyUi</name>
    </assembly>
    <members>
        <member name="T:Util.Webs.EasyUi.Align">
            <summary>
            对齐方式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Align.Left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Align.Right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Align.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Align.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.AlignLeftRigth">
            <summary>
            左右对齐方式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.AlignLeftRigth.Left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.AlignLeftRigth.Right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.AlignLeftRigthCenter">
            <summary>
            左右居中对齐方式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.AlignLeftRigthCenter.Left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.AlignLeftRigthCenter.Right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.AlignLeftRigthCenter.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.ComponentBase`1">
            <summary>
            基组件
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.OptionBase`1">
            <summary>
            基选项
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.IOption`1">
            <summary>
            选项
            </summary>
            <typeparam name="T">组件类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Width(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
            <param name="isPercent">是否百分比</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Height(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddAttribute(System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddStyle(System.String,System.String)">
            <summary>
            添加样式
            </summary>
            <param name="name">样式名称</param>
            <param name="value">样式值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddClass(System.String)">
            <summary>
            添加class属性
            </summary>
            <param name="class">class属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddDataOption(System.String,System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
            <param name="isAddQuote">是否为值添加引号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddDataOption(System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.AddDataOption(System.String,System.Nullable{System.Boolean})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Margin(System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="value">外边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Margin(System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Padding(System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="value">内边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Padding(System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IOption`1.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.#ctor">
            <summary>
            初始化基选项
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Base.OptionBase`1._builder">
            <summary>
            属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.GetAttributeBuilder">
            <summary>
            获取属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Width(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
            <param name="isPercent">是否百分比</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Height(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddAttribute(System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddAttribute(System.String,System.Boolean)">
            <summary>
            添加属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.UpdateAttribute(System.String,System.String)">
            <summary>
            修改属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddStyle(System.String,System.String)">
            <summary>
            添加样式
            </summary>
            <param name="name">样式名称</param>
            <param name="value">样式值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddClass(System.String)">
            <summary>
            添加class属性
            </summary>
            <param name="class">class属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.UpdateClass(System.String)">
            <summary>
            更新class属性
            </summary>
            <param name="class">class属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String,System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
            <param name="isAddQuote">是否为值添加引号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String,System.Nullable{System.Boolean})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String,System.Int32)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String,System.Nullable{System.Int32})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.AddDataOption(System.String)">
            <summary>
            添加data-options属性
            </summary>
            <param name="option">项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.This">
            <summary>
            返回组件
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.GetOptions">
            <summary>
            获取选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Margin(System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="value">外边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Margin(System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Padding(System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="value">内边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Padding(System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.OptionBase`1.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.IComponent`1">
            <summary>
            组件
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IComponent`1.GetId">
            <summary>
            获取标识
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IComponent`1.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IComponent`1.AddAfter(System.String)">
            <summary>
            在控件后添加html
            </summary>
            <param name="html">Html</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Base.ComponentBase`1._afterHtml">
            <summary>
            控件后Html
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Base.ComponentBase`1._id">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ComponentBase`1.GetId">
            <summary>
            获取标识
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ComponentBase`1.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ComponentBase`1.AddAfter(System.String)">
            <summary>
            在控件后添加html
            </summary>
            <param name="html">Html</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ComponentBase`1.ToHtmlString">
            <summary>
            输出
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ComponentBase`1.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.ContainerBase`1">
            <summary>
            基容器
            </summary>
            <typeparam name="T">基容器类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.IContainer`1">
            <summary>
            容器
            </summary>
            <typeparam name="T">容器类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.IContainer`1.Begin">
            <summary>
            输出容器起始标签
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerBase`1.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化基容
            </summary>
            <param name="writer">文本写入器</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Base.ContainerBase`1._writer">
            <summary>
            文本写入器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerBase`1.Begin">
            <summary>
            容器起始标签
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerBase`1.GetBeginResult">
            <summary>
            获取容器起始标签
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerBase`1.End">
            <summary>
            使用using输出结束标签
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerBase`1.GetEndResult">
            <summary>
            获取容器结束标签
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Base.ContainerWrapper`1">
            <summary>
            容器包装器，用来支持using
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerWrapper`1.#ctor(Util.Webs.EasyUi.Base.ContainerBase{`0})">
            <summary>
            初始化容器包装器
            </summary>
            <param name="container">容器</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Base.ContainerWrapper`1._container">
            <summary>
            容器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Base.ContainerWrapper`1.Dispose">
            <summary>
            使用using输出结束标签
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.Button">
            <summary>
            按钮
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.Button`1">
            <summary>
            按钮
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.ButtonBase`1">
            <summary>
            按钮
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.IButtonBase`1">
            <summary>
            按钮
            </summary>
            <typeparam name="T">按钮类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Disable(System.Boolean)">
            <summary>
            禁用按钮
            </summary>
            <param name="disabled">true为禁用</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Plain(System.Boolean)">
            <summary>
            启用平滑效果
            </summary>
            <param name="isPlain">true为启用平滑效果</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.IconAlign(Util.Webs.EasyUi.Align)">
            <summary>
            设置图标对齐方式
            </summary>
            <param name="align">图标对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Small">
            <summary>
            设置为小按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Large">
            <summary>
            设置为大按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">事件处理函数或Js代码,范例: fun() 或 alert('1');</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.Href(System.String)">
            <summary>
            设置url
            </summary>
            <param name="href">url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.ToolTip(System.String)">
            <summary>
            设置工具提示
            </summary>
            <param name="content">提示内容</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButtonBase`1.ToolTip(System.String,Util.Webs.EasyUi.Align)">
            <summary>
            设置工具提示
            </summary>
            <param name="content">提示内容</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.#ctor(System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Buttons.ButtonBase`1._href">
            <summary>
            url
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Disable(System.Boolean)">
            <summary>
            禁用按钮
            </summary>
            <param name="disabled">true为禁用</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Plain(System.Boolean)">
            <summary>
            启用平滑效果
            </summary>
            <param name="isPlain">true为启用平滑效果</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.IconAlign(Util.Webs.EasyUi.Align)">
            <summary>
            设置图标对齐方式
            </summary>
            <param name="align">图标对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Small">
            <summary>
            设置为小按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Large">
            <summary>
            设置为大按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">事件处理函数或Js代码</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.Href(System.String)">
            <summary>
            设置url
            </summary>
            <param name="href">url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.ToolTip(System.String)">
            <summary>
            设置工具提示
            </summary>
            <param name="content">提示内容</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.ToolTip(System.String,Util.Webs.EasyUi.Align)">
            <summary>
            设置工具提示
            </summary>
            <param name="content">提示内容</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.ButtonBase`1.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Buttons.ButtonBase`1.Text">
            <summary>
            按钮文本
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.IButton`1">
            <summary>
            按钮
            </summary>
            <typeparam name="T">按钮类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.Submit(System.String,System.String,System.String)">
            <summary>
            提交表单
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.Delete(System.String,System.String,System.String)">
            <summary>
            删除
            </summary>
            <param name="url">删除对应的后台url</param>
            <param name="handler">成功回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.Query(System.String,System.String)">
            <summary>
            查询
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.Refresh(System.String,System.String)">
            <summary>
            刷新
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.AddByGrid(System.Object,System.String,System.String)">
            <summary>
            添加表格行
            </summary>
            <param name="row">新行初始数据</param>
            <param name="gridId">表格Id</param>
            <param name="beforeHandler">添加前操作</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.EditByGrid(System.String)">
            <summary>
            编辑表格行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.CancelByGrid(System.String)">
            <summary>
            取消表格行编辑状态
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.DeleteByGrid(System.String)">
            <summary>
            删除表格行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SaveByGrid(System.String,System.String,System.String)">
            <summary>
            保存表格所有操作
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SubmitIdsByGrid(System.String,System.String,System.String)">
            <summary>
            提交表格checkbox选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.AddRootByTreeGrid(System.Object,System.String,System.String)">
            <summary>
            添加树型表格根节点
            </summary>
            <param name="row">新行初始数据</param>
            <param name="gridId">表格Id</param>
            <param name="beforeHandler">添加前操作</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.AddToChildByTreeGrid(System.Object,System.String)">
            <summary>
            添加树型表格下级节点
            </summary>
            <param name="row">新行初始数据</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.EditByTreeGrid(System.String)">
            <summary>
            编辑树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.DeleteByTreeGrid(System.String)">
            <summary>
            删除树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.CancelByTreeGrid(System.String)">
            <summary>
            取消树型表格节点编辑状态
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SaveByTreeGrid(System.String,System.String,System.String)">
            <summary>
            保存树型表格所有操作
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SubmitIdsByTreeGrid(System.String,System.String,System.String)">
            <summary>
            提交树型表格checkbox选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.QueryByTreeGrid(System.String,System.String)">
            <summary>
            查询树型表格
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.RefreshByTreeGrid(System.String,System.String)">
            <summary>
            刷新树型表格
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.MoveUpByTreeGrid(System.String)">
            <summary>
            上移树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.MoveDownByTreeGrid(System.String)">
            <summary>
            下移树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.AddByDetail(System.String)">
            <summary>
            展开表格添加新行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.EditByDetail(System.String)">
            <summary>
            展开表格更新行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SubmitByDetail(System.String,System.String,System.String)">
            <summary>
            提交表格行展开的更新表单
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SubmitIdsByTree(System.String,System.String,System.String,System.String)">
            <summary>
            提交树选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="treeId">树Id</param>
            <param name="message">确认消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.DeleteByTree(System.String,System.String,System.String)">
            <summary>
            删除选中的树节点
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="treeId">树Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IButton`1.SubmitByTree(System.String,System.String,System.String,System.String)">
            <summary>
            提交表单，成功刷新树
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
            <param name="treeId">树Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.#ctor(System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.Submit(System.String,System.String,System.String)">
            <summary>
            提交表单
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.GetSubmitParams(System.String,System.String,System.String,System.String)">
            <summary>
            获取表单参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.Delete(System.String,System.String,System.String)">
            <summary>
            删除
            </summary>
            <param name="url">删除对应的后台url</param>
            <param name="handler">成功回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.GetParams(System.String,System.String,System.String,System.String)">
            <summary>
            获取参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.Query(System.String,System.String)">
            <summary>
            查询
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.GetParams(System.String,System.String)">
            <summary>
            获取参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.Refresh(System.String,System.String)">
            <summary>
            刷新
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.AddByGrid(System.Object,System.String,System.String)">
            <summary>
            添加表格行
            </summary>
            <param name="row">新行初始数据</param>
            <param name="gridId">表格Id</param>
            <param name="beforeHandler">添加前操作</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.GetAddParams(System.Object,System.String,System.String)">
            <summary>
            获取添加参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.EditByGrid(System.String)">
            <summary>
            编辑表格行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.GetGridId(System.String)">
            <summary>
            获取表格Id
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.CancelByGrid(System.String)">
            <summary>
            取消表格行编辑状态
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.DeleteByGrid(System.String)">
            <summary>
            删除表格行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SaveByGrid(System.String,System.String,System.String)">
            <summary>
            保存表格所有操作
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SubmitIdsByGrid(System.String,System.String,System.String)">
            <summary>
            提交checkbox选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.AddRootByTreeGrid(System.Object,System.String,System.String)">
            <summary>
            添加树型表格根节点
            </summary>
            <param name="row">新行</param>
            <param name="gridId">表格Id</param>
            <param name="beforeHandler">添加前操作</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.AddToChildByTreeGrid(System.Object,System.String)">
            <summary>
            添加树型表格下级节点
            </summary>
            <param name="row">新行初始数据</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.EditByTreeGrid(System.String)">
            <summary>
            编辑树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.DeleteByTreeGrid(System.String)">
            <summary>
            删除树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.CancelByTreeGrid(System.String)">
            <summary>
            取消树型表格节点编辑状态
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SaveByTreeGrid(System.String,System.String,System.String)">
            <summary>
            保存树型表格所有操作
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SubmitIdsByTreeGrid(System.String,System.String,System.String)">
            <summary>
            提交checkbox选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.QueryByTreeGrid(System.String,System.String)">
            <summary>
            查询树型表格
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.RefreshByTreeGrid(System.String,System.String)">
            <summary>
            刷新树型表格
            </summary>
            <param name="formId">查询表单Id</param>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.MoveUpByTreeGrid(System.String)">
            <summary>
            上移树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.MoveDownByTreeGrid(System.String)">
            <summary>
            下移树型表格节点
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.AddByDetail(System.String)">
            <summary>
            展开表格添加新行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.EditByDetail(System.String)">
            <summary>
            展开表格更新行
            </summary>
            <param name="gridId">表格Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SubmitByDetail(System.String,System.String,System.String)">
            <summary>
            提交表格行展开的更新表单
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SubmitIdsByTree(System.String,System.String,System.String,System.String)">
            <summary>
            提交树选中的Id列表
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="treeId">树Id</param>
            <param name="message">确认消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.DeleteByTree(System.String,System.String,System.String)">
            <summary>
            删除选中的树节点
            </summary>
            <param name="url">保存Url</param>
            <param name="handler">回调函数</param>
            <param name="treeId">树Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button`1.SubmitByTree(System.String,System.String,System.String,System.String)">
            <summary>
            提交表单，成功刷新树
            </summary>
            <param name="beforeHandler">提交前操作</param>
            <param name="successHandler">提交成功操作</param>
            <param name="formId">表单Id</param>
            <param name="treeId">树Id</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.IButton">
            <summary>
            按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.Button.#ctor(System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.DialogButton">
            <summary>
            弹出窗口按钮
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Buttons.IDialogButton">
            <summary>
            弹出窗口按钮
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.Url(System.String)">
            <summary>
            设置弹出窗口网址
            </summary>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.Title(System.String)">
            <summary>
            设置弹出窗口标题
            </summary>
            <param name="title">弹出窗口标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.Buttons(System.String)">
            <summary>
            设置弹出窗口底部按钮
            </summary>
            <param name="buttonDivId">弹出窗口底部按钮区域div的id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.DialogIcon(System.String)">
            <summary>
            设置弹出窗口图标class
            </summary>
            <param name="iconClass">弹出窗口图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.DialogSize(System.Int32,System.Int32)">
            <summary>
            设置弹出窗口尺寸
            </summary>
            <param name="width">弹出窗口宽度</param>
            <param name="height">弹出窗口高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.Maximizable(System.Boolean)">
            <summary>
            允许弹出窗口最大化
            </summary>
            <param name="allow">true为允许最大化</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.OnClose(System.String)">
            <summary>
            设置弹出窗口关闭回调函数
            </summary>
            <param name="callback">弹出窗口关闭回调函数,范例：func</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.OnInit(System.String)">
            <summary>
            设置弹出窗口初始化事件
            </summary>
            <param name="callback">初始化回调函数,接收option参数，返回false跳出执行</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.CloseDialog">
            <summary>
            关闭弹出窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.ShowEditDialog">
            <summary>
            显示编辑窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.ShowDetailDialog">
            <summary>
            显示详细窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.IDialogButton.ShowEditDialogByTree(System.String)">
            <summary>
            显示编辑窗口 - 树
            </summary>
            <param name="treeId">树控件Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.#ctor(System.String,System.String)">
            <summary>
            初始化弹出窗口按钮
            </summary>
            <param name="text">按钮文本</param>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Buttons.DialogButton._isClose">
            <summary>
            是否关闭窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.Url(System.String)">
            <summary>
            设置弹出窗口网址
            </summary>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.Title(System.String)">
            <summary>
            设置弹出窗口标题
            </summary>
            <param name="title">弹出窗口标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.Buttons(System.String)">
            <summary>
            设置弹出窗口底部按钮
            </summary>
            <param name="buttonDivId">弹出窗口底部按钮区域div的id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.DialogIcon(System.String)">
            <summary>
            设置弹出窗口图标class
            </summary>
            <param name="iconClass">弹出窗口图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.DialogSize(System.Int32,System.Int32)">
            <summary>
            设置弹出窗口尺寸
            </summary>
            <param name="width">弹出窗口宽度</param>
            <param name="height">弹出窗口高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.Maximizable(System.Boolean)">
            <summary>
            允许弹出窗口最大化
            </summary>
            <param name="allow">true为允许最大化</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.OnClose(System.String)">
            <summary>
            设置弹出窗口关闭回调函数
            </summary>
            <param name="callback">弹出窗口关闭回调函数,范例：func</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.OnInit(System.String)">
            <summary>
            设置弹出窗口初始化事件
            </summary>
            <param name="callback">初始化回调函数,接收option参数，返回false跳出执行</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.CloseDialog">
            <summary>
            关闭弹出窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.ShowEditDialog">
            <summary>
            显示编辑窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.ShowDetailDialog">
            <summary>
            显示详细窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.ShowEditDialogByTree(System.String)">
            <summary>
            显示编辑窗口 - 树
            </summary>
            <param name="treeId">树控件Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.CreateClickHandler(System.Text.StringBuilder)">
            <summary>
            创建单击事件处理
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.CreateOpenDialog(System.Text.StringBuilder)">
            <summary>
            打开弹出窗口
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Buttons.DialogButton.CreateCloseDialog(System.Text.StringBuilder)">
            <summary>
            关闭弹出窗口
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Buttons.DialogButton.Builder">
            <summary>
            属性生成器
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Commons.ExpressionResolver`3">
            <summary>
            表达式解析器
            </summary>
            <typeparam name="TControl">控件类型</typeparam>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.#ctor(Util.Webs.EasyUi.Commons.IValidation{`0},System.Linq.Expressions.Expression{System.Func{`1,`2}})">
            <summary>
            初始化表达式解析器
            </summary>
            <typeparam name="TControl">控件类型</typeparam>
            <param name="control">控件</param>
            <param name="expression">属性表达式</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Commons.ExpressionResolver`3._control">
            <summary>
            控件
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Commons.ExpressionResolver`3._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Commons.ExpressionResolver`3._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.Resolve(Util.Webs.EasyUi.Commons.IValidation{`0},System.Linq.Expressions.Expression{System.Func{`1,`2}})">
            <summary>
            解析表达式
            </summary>
            <param name="control">控件</param>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitType">
            <summary>
            初始化类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitValidation(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitRequired(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化必填项验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitStringLength(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化字符串长度验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitEmail(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化电子邮件验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitMobilePhone(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.ExpressionResolver`3.InitUrl(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            初始化Url验证
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Commons.IValidation`1">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Required(System.String)">
            <summary>
            设置必填项
            </summary>
            <param name="message">验证失败消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.MaxLength(System.Int32)">
            <summary>
            设置最大长度验证
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Length(System.Int32,System.Int32)">
            <summary>
            设置长度验证
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Date">
            <summary>
            设置为日期控件，不带时间
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Number(System.Int32)">
            <summary>
            设置为数值文本控件，只能输入数值
            </summary>
            <param name="precision">精度，即小数位数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Int">
            <summary>
            设置为整数文本控件，只能输入整数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.Email">
            <summary>
            设置Email验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.MobilePhone">
            <summary>
            设置手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.IValidation`1.ValidateUrl">
            <summary>
            设置Url验证
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Commons.LazyValue">
            <summary>
            延迟设置值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.LazyValue.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.LazyValue.SetValue``1(Util.Webs.EasyUi.Base.IComponent{``0},System.String,System.String)">
            <summary>
            设置值
            </summary>
            <typeparam name="T">控件类型</typeparam>
            <param name="control">控件</param>
            <param name="value">值</param>
            <param name="handler">回调函数</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Commons.Validator">
            <summary>
            验证器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.#ctor">
            <summary>
            初始化验证器
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Commons.Validator._validTypes">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Commons.Validator._builder">
            <summary>
            Json属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.AddValidation(System.String,System.Object[])">
            <summary>
            添加验证条件
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Required(System.Boolean)">
            <summary>
            设置文本框为必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Required(System.String)">
            <summary>
            设置文本框为必填项
            </summary>
            <param name="message">验证失败消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Email">
            <summary>
            设置Email验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.MobilePhone">
            <summary>
            设置手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Url">
            <summary>
            设置Url验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Length(System.Int32,System.Int32)">
            <summary>
            设置长度验证
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.MinLength(System.Int32)">
            <summary>
            设置最小长度验证
            </summary>
            <param name="minLength">最小长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.MaxLength(System.Int32)">
            <summary>
            设置最大长度验证
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Remote(System.String,System.String)">
            <summary>
            设置远程验证
            </summary>
            <param name="url">远程url</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.EqualTo(System.String,System.String)">
            <summary>
            设置相等验证
            </summary>
            <param name="targetId">目标元素Id</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Max(System.Double,System.String)">
            <summary>
            设置最大值验证
            </summary>
            <param name="maxValue">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Min(System.Double,System.String)">
            <summary>
            设置最小值验证
            </summary>
            <param name="minValue">最小值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.Range(System.Double,System.Double,System.String)">
            <summary>
            设置数值范围验证
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.AddValidType">
            <summary>
            添加验证类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Commons.Validator.GetValidType">
            <summary>
            获取验证类型
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Configs.DataGridColumnOption">
            <summary>
            表格列配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.DataGridColumnOption.ToString">
            <summary>
            输出Json结果
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.HeaderAlign">
            <summary>
            标题对齐方式
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Align">
            <summary>
            内容对齐方式
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.CheckBox">
            <summary>
            是否显示复选框
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridColumnOption.Formatter">
            <summary>
            格式化函数
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Configs.DataGridOption">
            <summary>
            表格配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.DataGridOption.AddColumn(Util.Webs.EasyUi.Configs.DataGridColumnOption)">
            <summary>
            添加列配置项
            </summary>
            <param name="option">列配置项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.DataGridOption.ToString">
            <summary>
            输出Json结果
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.FitColumns">
            <summary>
            列自适应
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.ForeignField">
            <summary>
            外键列
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Property">
            <summary>
            导航属性
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Columns">
            <summary>
            列集合
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.RowNumbers">
            <summary>
            显示行号
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Fit">
            <summary>
            设置自适应布局
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Pagination">
            <summary>
            显示分页
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.SortName">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.SortOrder">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.CheckOnSelect">
            <summary>
            选择表格行时是否同时选中复选框
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.SelectOnCheck">
            <summary>
            选中复选框时是否同时选中表格行
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.SingleSelect">
            <summary>
            是否只能选中一行
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Striped">
            <summary>
            是否显示条纹
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.OnDblClickRow">
            <summary>
            双击行事件处理函数
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.OnRowContextMenu">
            <summary>
            右键单击行事件处理函数
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.DataGridOption.OnLoadSuccess">
            <summary>
            加载成功事件处理函数
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Configs.LookupOption">
            <summary>
            查找带回配置选项
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Url">
            <summary>
            远程Url
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Icon">
            <summary>
            图标class
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.ButtonsDivId">
            <summary>
            弹出窗口按钮区域div Id
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.OnInit">
            <summary>
            初始化事件处理函数
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.LookupOption.Editable">
            <summary>
            是否允许编辑文本框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Configs.SubGridOption">
            <summary>
            子表格配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.SubGridOption.#ctor">
            <summary>
            初始化子表格配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.SubGridOption.SetSubGrid(Util.Webs.EasyUi.Configs.SubGridOption)">
            <summary>
            添加子表格配置项
            </summary>
            <param name="option">子表格配置项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Configs.SubGridOption.ToString">
            <summary>
            输出Json结果
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.SubGridOption.Options">
            <summary>
            选项
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Configs.SubGridOption.SubGrid">
            <summary>
            子表格
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.EasyUiAttributeBuilder">
            <summary>
            EasyUi属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.#ctor">
            <summary>
            初始化EasyUi属性生成器
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.EasyUiAttributeBuilder._dataOptionBuilder">
            <summary>
            data-options属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.AddDataOption(System.String,System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
            <param name="isAddQuote">是否给值添加引号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.GetQuotes(System.Boolean)">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.AddDataOption(System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.AddDataOption(System.String)">
            <summary>
            添加data-options属性
            </summary>
            <param name="option">项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiAttributeBuilder.AddDataOption(System.String,System.Nullable{System.Boolean})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="T:Util.Webs.EasyUi.EasyUiControllerBase">
            <summary>
            EasyUi基控制器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.ToDataGridResult``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            转换为DataGrid输出结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="data">实体列表</param>
            <param name="totalCount">总行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.GetTotalCount``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            获取总行数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.ToTreeGridResult(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Trees.ITreeNode},System.Boolean,System.Int32)">
            <summary>
            转换为TreeGrid输出结果
            </summary>
            <param name="data">实体列表</param>
            <param name="isAyncLoad">是否异步加载</param>
            <param name="totalCount">总行数</param> 
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.ToTreeResult(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Trees.ITreeNode},System.Boolean)">
            <summary>
            转换为Tree输出结果
            </summary>
            <param name="data">实体列表</param>
            <param name="isAyncLoad">是否异步加载</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.ToTreeResult(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Trees.ITreeNode},System.String)">
            <summary>
            转换为Tree输出结果
            </summary>
            <param name="data">实体列表</param>
            <param name="rootName">根节点名称</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.ToComboxResult(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            转换为Combox输出结果
            </summary>
            <param name="items">组合框项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.Ok(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            返回成功消息
            </summary>
            <param name="message">消息</param>
            <param name="data">数据</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.Fail(System.String)">
            <summary>
            返回失败消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.RemoteOk">
            <summary>
            远程验证成功
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.RemoteFail(System.String)">
            <summary>
            远程验证失败
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.GetPageIndex">
            <summary>
            获取分页的页索引
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.GetPageSize">
            <summary>
            获取分页大小
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiControllerBase.GetOrder">
            <summary>
            获取排序
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.EasyUiFactory">
            <summary>
            EasyUi工厂
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateButton(System.String)">
            <summary>
            创建按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateDialogButton(System.String,System.String)">
            <summary>
            创建弹出窗口按钮
            </summary>
            <param name="text">按钮文本</param>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateTextBox">
            <summary>
            创建文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateCombox">
            <summary>
            创建组合框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateCombox(System.String,System.String,System.String,System.String)">
            <summary>
            创建组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateMenu(System.String)">
            <summary>
            创建菜单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateMenuItem">
            <summary>
            创建菜单项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateDataGrid">
            <summary>
            创建表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateSubGrid">
            <summary>
            创建表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateDataGridColumn">
            <summary>
            创建表格列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateSubGridColumn">
            <summary>
            创建子表格列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateTreeGrid">
            <summary>
            创建树型表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateTree">
            <summary>
            创建树
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreateComboTree(System.String,System.String,System.String,System.String)">
            <summary>
            创建树组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory.CreatePagination">
            <summary>
            创建分页
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.EasyUiFactory`1">
            <summary>
            EasyUi工厂
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateEasyUiService(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建EasyUi服务
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateLayout(System.Web.Mvc.HtmlHelper{`0},System.Boolean)">
            <summary>
            创建布局
            </summary>
            <param name="helper">HtmlHelper</param>
            <param name="fit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateLayoutRegion(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建布局区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreatePanel(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateTabs(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建选项卡
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateTabPanel(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建选项卡面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateForm(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建表单
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateTextBox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建文本框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateCombox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            创建组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateCombox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Mvc.HtmlHelper{`0},System.String,System.String)">
            <summary>
            创建组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
            <param name="id">控件Id</param>
            <param name="url">远程Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateDataGridColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Mvc.HtmlHelper{`0},System.Boolean)">
            <summary>
            创建表格列
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
            <param name="isEdit">是否允许编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateSubGrid``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,Util.Webs.EasyUi.Grids.ISubGridColumn[]})">
            <summary>
            创建子表格
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">集合属性,范例：t => t.Users</param>
            <param name="funcCreateColumns">创建列集合方法</param>
        </member>
        <member name="M:Util.Webs.EasyUi.EasyUiFactory`1.CreateSubGridColumn``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            创建子表格列
            </summary>
            <param name="expression">表达式</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree">
            <summary>
            树型组合框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.Combo`1">
            <summary>
            组合控件
            </summary>
            <typeparam name="T">组合控件类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1">
            <summary>
            文本框
            </summary>
            <typeparam name="T">文本框类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1">
            <summary>
            文本框
            </summary>
            <typeparam name="T">文本框类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Name(System.String)">
            <summary>
            设置name属性
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Prompt(System.String)">
            <summary>
            设置提示消息，该消息显示在文本框中
            </summary>
            <param name="text">提示消息文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Value(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Password">
            <summary>
            设置为密码框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.MultiLine(System.Int32,System.Int32)">
            <summary>
            设置为多行文本框
            </summary>
            <param name="width">文本框宽度</param>
            <param name="height">文本框高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Disable(System.Boolean)">
            <summary>
            禁用文本框
            </summary>
            <param name="disabled">true为禁用</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.ReadOnly(System.Boolean)">
            <summary>
            设置文本框为只读
            </summary>
            <param name="readOnly">true为只读</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Editable(System.Boolean)">
            <summary>
            设置文本框为可编辑
            </summary>
            <param name="editable">true为可编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Icon(System.String,System.Int32,Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置文本框图标
            </summary>
            <param name="iconClass">图标class</param>
            <param name="width">图标宽度，默认18</param>
            <param name="align">图标对齐方式，默认右对齐</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Button(System.String,System.String,System.String,Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置文本框按钮
            </summary>
            <param name="iconClass">文本框按钮图标class</param>
            <param name="clickCallback">单击回调函数，只设置函数名，范例：func</param>
            <param name="text">按钮文本</param>
            <param name="align">按钮对齐方式,默认右对齐</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.OnChange(System.String)">
            <summary>
            设置文本框文本改变事件处理
            </summary>
            <param name="callback">文本改变回调函数，只设置函数名，范例：func</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Delay(System.Int32)">
            <summary>
            设置延迟验证的时间，从最后输入完成开始计时
            </summary>
            <param name="time">延迟验证的时间，单位：毫秒</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.TipPosition(Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置提示位置
            </summary>
            <param name="align">提示位置</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.NoValidate">
            <summary>
            设置关闭验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Required(System.Boolean)">
            <summary>
            设置文本框为必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.MinLength(System.Int32)">
            <summary>
            设置最小长度验证
            </summary>
            <param name="minLength">最小长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Remote(System.String,System.String)">
            <summary>
            设置远程验证
            </summary>
            <param name="url">远程url</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.EqualTo(System.String,System.String)">
            <summary>
            设置相等验证
            </summary>
            <param name="targetId">目标元素Id</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Max(System.Double,System.String)">
            <summary>
            设置最大值验证
            </summary>
            <param name="maxValue">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Min(System.Double,System.String)">
            <summary>
            设置最小值验证
            </summary>
            <param name="minValue">最小值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Range(System.Double,System.Double,System.String)">
            <summary>
            设置数值范围验证
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.DateTime">
            <summary>
            显示日期时间框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox`1.Time">
            <summary>
            显示时间框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.#ctor">
            <summary>
            初始化文本框
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1._validator">
            <summary>
            验证器
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1._onchangeBuilder">
            <summary>
            onchange数组生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Name(System.String)">
            <summary>
            设置name属性
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Prompt(System.String)">
            <summary>
            设置提示消息，该消息显示在文本框中
            </summary>
            <param name="text">提示消息文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Value(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Password">
            <summary>
            设置为密码框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.MultiLine(System.Int32,System.Int32)">
            <summary>
            设置为多行文本框
            </summary>
            <param name="width">文本框宽度</param>
            <param name="height">文本框高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Disable(System.Boolean)">
            <summary>
            禁用文本框
            </summary>
            <param name="disabled">true为禁用</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.ReadOnly(System.Boolean)">
            <summary>
            设置文本框为只读
            </summary>
            <param name="readOnly">true为只读</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Editable(System.Boolean)">
            <summary>
            设置文本框为可编辑
            </summary>
            <param name="editable">true为可编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Icon(System.String,System.Int32,Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置文本框图标
            </summary>
            <param name="iconClass">图标class</param>
            <param name="width">图标宽度，默认18</param>
            <param name="align">图标对齐方式，默认右对齐</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Button(System.String,System.String,System.String,Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置文本框按钮
            </summary>
            <param name="iconClass">文本框按钮图标class</param>
            <param name="clickCallback">单击回调函数</param>
            <param name="text">按钮文本</param>
            <param name="align">按钮对齐方式,默认右对齐</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.OnChange(System.String)">
            <summary>
            设置文本框文本改变事件处理
            </summary>
            <param name="callback">文本改变回调函数，只设置函数名，范例：func</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Delay(System.Int32)">
            <summary>
            设置延迟验证的时间
            </summary>
            <param name="time">延迟验证的时间，单位：毫秒</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.TipPosition(Util.Webs.EasyUi.AlignLeftRigth)">
            <summary>
            设置提示位置
            </summary>
            <param name="align">提示位置</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.NoValidate">
            <summary>
            设置关闭验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Required(System.Boolean)">
            <summary>
            设置文本框为必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Required(System.String)">
            <summary>
            设置文本框为必填项
            </summary>
            <param name="message">验证失败消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Email">
            <summary>
            设置Email验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.MobilePhone">
            <summary>
            设置手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.ValidateUrl">
            <summary>
            设置Url验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Length(System.Int32,System.Int32)">
            <summary>
            设置长度验证
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.MinLength(System.Int32)">
            <summary>
            设置最小长度验证
            </summary>
            <param name="minLength">最小长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.MaxLength(System.Int32)">
            <summary>
            设置最大长度验证
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Remote(System.String,System.String)">
            <summary>
            设置远程验证
            </summary>
            <param name="url">远程url</param>
            <param name="parameterName">参数名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.EqualTo(System.String,System.String)">
            <summary>
            设置相等验证
            </summary>
            <param name="targetId">目标元素Id</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Max(System.Double,System.String)">
            <summary>
            设置最大值验证
            </summary>
            <param name="maxValue">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Min(System.Double,System.String)">
            <summary>
            设置最小值验证
            </summary>
            <param name="minValue">最小值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Range(System.Double,System.Double,System.String)">
            <summary>
            设置数值范围验证
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Date">
            <summary>
            显示日期框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.DateTime">
            <summary>
            显示日期时间框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Time">
            <summary>
            显示时间框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Number(System.Int32)">
            <summary>
            设置为数值文本框
            </summary>
            <param name="precision">精度，即小数位数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.Int">
            <summary>
            设置为整数文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.AddValidations">
            <summary>
            添加验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.TextBox`1.AddEvents">
            <summary>
            添加事件
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.ICombo`1">
            <summary>
            组合控件
            </summary>
            <typeparam name="T">组合控件</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.ICombo`1.PanelHeight(System.String)">
            <summary>
            设置面板高度，即下拉列表的高度
            </summary>
            <param name="height">面板高度，值为"auto"为自适应，也可以指定高度，范例"100"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.Combo`1.PanelHeight(System.String)">
            <summary>
            设置面板高度，即下拉列表的高度
            </summary>
            <param name="height">面板高度，值为"auto"为自适应，也可以指定高度，范例"100"</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.ComboTrees.IComboTree">
            <summary>
            树型组合框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.ITree`1">
            <summary>
            树
            </summary>
            <typeparam name="T">树类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Url(System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Animate">
            <summary>
            启用折叠动画效果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Checkbox(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            显示复选框
            </summary>
            <param name="onlyLeafCheck">仅显示叶节点复选框</param>
            <param name="cascadeCheck">级联选择复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.EnableDrag">
            <summary>
            启用拖拽
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Params(System.Object)">
            <summary>
            设置发送到远程Url的参数
            </summary>
            <param name="param">请求参数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.OnBeforeSelect(System.String)">
            <summary>
            设置选择前事件处理函数
            </summary>
            <param name="handler">选择前事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.OnSelect(System.String)">
            <summary>
            设置选择事件处理函数
            </summary>
            <param name="handler">选择事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.SelectLeafOnly">
            <summary>
            仅允许选择叶节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.OnContextMenu(System.String)">
            <summary>
            设置右键菜单事件处理函数
            </summary>
            <param name="handler">右键菜单事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="treeId">树Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.ITree`1.RefreshPanel(System.String,System.String,System.String,System.String)">
            <summary>
            单击刷新面板
            </summary>
            <param name="panelId">面板编号</param>
            <param name="url">服务端Url</param>
            <param name="paramName">参数</param>
            <param name="fnCreateUrl">用于创建Url的回调函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.IComboTree.Url(System.String,System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.IComboTree.LazyValue(System.String)">
            <summary>
            延迟设置值，当数据加载完成时设置
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.#ctor">
            <summary>
            初始化树
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree._option">
            <summary>
            树选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Url(System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Url(System.String,System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Animate">
            <summary>
            启用折叠动画效果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Checkbox(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            显示复选框
            </summary>
            <param name="onlyLeafCheck">仅显示叶节点复选框</param>
            <param name="cascadeCheck">级联选择复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.EnableDrag">
            <summary>
            启用拖拽
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Params(System.Object)">
            <summary>
            设置发送到远程Url的参数
            </summary>
            <param name="param">请求参数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.OnBeforeSelect(System.String)">
            <summary>
            设置选择前事件处理函数
            </summary>
            <param name="handler">选择前事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.OnSelect(System.String)">
            <summary>
            设置选择事件处理函数
            </summary>
            <param name="handler">选择事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.SelectLeafOnly">
            <summary>
            仅允许选择叶节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.LazyValue(System.String)">
            <summary>
            延迟设置值，当数据加载完成时设置
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.OnContextMenu(System.String)">
            <summary>
            设置右键菜单事件处理函数
            </summary>
            <param name="handler">右键菜单事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="treeId">树Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.RefreshPanel(System.String,System.String,System.String,System.String)">
            <summary>
            单击刷新面板
            </summary>
            <param name="panelId">面板编号</param>
            <param name="url">服务端Url</param>
            <param name="paramName">参数</param>
            <param name="fnCreateUrl">用于创建Url的回调函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.ComboTrees.ComboTree.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.Combox">
            <summary>
            组合框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.Combox`1">
            <summary>
            组合框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1">
            <summary>
            组合框
            </summary>
            <typeparam name="T">组合框控件</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Add(System.String,System.Object)">
            <summary>
            添加项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Add(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            添加项集合
            </summary>
            <param name="items">项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.AddDefault(System.String,System.Object)">
            <summary>
            添加默认项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Bool">
            <summary>
            绑定bool值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Bool(System.String,System.Object)">
            <summary>
            绑定bool值
            </summary>
            <param name="text">默认项的文本</param>
            <param name="value">默认项的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Enum``1">
            <summary>
            绑定枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Enum``1(System.String,System.Object)">
            <summary>
            绑定枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="text">默认项的文本</param>
            <param name="value">默认项的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Load(System.String,System.String,System.String,System.String)">
            <summary>
            从远程加载数据
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"value"</param>
            <param name="textField">文本字段名，默认为"text"</param>
            <param name="groupField">组字段名，默认为"group"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Child(System.String,System.String,System.String)">
            <summary>
            设置联动子控件
            </summary>
            <param name="childId">联动子控件</param>
            <param name="requestParam">请求参数</param>
            <param name="url">子控件加载url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.LazyValue(System.String)">
            <summary>
            延迟设置值，当数据加载完成时设置
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Hidden(System.String,System.String)">
            <summary>
            添加隐藏控件，用于保存文本
            </summary>
            <param name="hiddenName">hidden控件name</param>
            <param name="text">显示文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ICombox`1.Url(System.String,System.String)">
            <summary>
            从远程加载数据，该方法将Load和LazyValue方法合并，提供一个更易用的操作
            </summary>
            <param name="url">远程Url，服务端请使用ToComboxResult方法返回数据</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.#ctor">
            <summary>
            初始化组合框
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.Combox`1._items">
            <summary>
            组合框选项集合
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.Combox`1._selectedValue">
            <summary>
            选中的值
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.IsLoad">
            <summary>
            是否远程加载
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Add(System.String,System.Object)">
            <summary>
            添加项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Add(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            添加项集合
            </summary>
            <param name="items">项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.AddDefault(System.String,System.Object)">
            <summary>
            添加默认项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Value(System.String)">
            <summary>
            选中项
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Bool">
            <summary>
            绑定bool值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Bool(System.String,System.Object)">
            <summary>
            绑定bool值
            </summary>
            <param name="text">默认项的文本</param>
            <param name="value">默认项的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Number(System.Int32)">
            <summary>
            设置为数值文本框
            </summary>
            <param name="precision">精度，即小数位数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Int">
            <summary>
            设置为整数文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Enum``1">
            <summary>
            绑定枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Enum``1(System.String,System.Object)">
            <summary>
            绑定枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="text">默认项的文本</param>
            <param name="value">默认项的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Load(System.String,System.String,System.String,System.String)">
            <summary>
            从远程加载数据
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"value"</param>
            <param name="textField">文本字段名，默认为"text"</param>
            <param name="groupField">组字段名，默认为"group"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Child(System.String,System.String,System.String)">
            <summary>
            设置联动子控件
            </summary>
            <param name="childId">联动子控件</param>
            <param name="requestParam">请求参数</param>
            <param name="url">子控件加载url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.GetChildParams(System.String,System.String,System.String)">
            <summary>
            获取联动子控件参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.LazyValue(System.String)">
            <summary>
            延迟设置值，当数据加载完成时设置
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Hidden(System.String,System.String)">
            <summary>
            添加隐藏控件，用于保存文本
            </summary>
            <param name="hiddenName">hidden控件name</param>
            <param name="text">显示文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.Url(System.String,System.String)">
            <summary>
            从远程加载数据，该方法将Load和LazyValue方法合并，提供一个更易用的操作
            </summary>
            <param name="url">远程Url，服务端请使用ToComboxResult方法返回数据</param>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.RenderInput(System.Text.StringBuilder)">
            <summary>
            渲染为input
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.RenderSelect(System.Text.StringBuilder)">
            <summary>
            渲染为select
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.GetOptions(System.Text.StringBuilder)">
            <summary>
            获取项集合
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.GetOption(System.Text.StringBuilder,Util.Webs.EasyUi.Forms.Comboxs.ComboxItem)">
            <summary>
            获取项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.IsSelect(Util.Webs.EasyUi.Forms.Comboxs.ComboxItem)">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.GetValueHtml(System.Object)">
            <summary>
            获取值Html属性
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.Combox`1.ToJson(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            转换为Json
            </summary>
            <param name="items">组合框项集合</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.ICombox">
            <summary>
            组合框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.ComboxItem">
            <summary>
            组合框选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.ComboxItem.#ctor(System.String,System.Object,System.String)">
            <summary>
            初始化组合框选项
            </summary>
            <param name="text">文本</param>
            <param name="value">值</param>
            <param name="group">组</param>
        </member>
        <member name="P:Util.Webs.EasyUi.Forms.Comboxs.ComboxItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Forms.Comboxs.ComboxItem.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Forms.Comboxs.ComboxItem.Group">
            <summary>
            组
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2">
            <summary>
            实体组合框
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            初始化实体组合框
            </summary>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            初始化实体组合框
            </summary>
            <param name="expression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Web.Mvc.HtmlHelper{`0},System.String,System.String)">
            <summary>
            初始化实体组合框
            </summary>
            <param name="expression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
            <param name="id">控件Id</param>
            <param name="url">远程Url</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2._value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.InitName">
            <summary>
            初始化name属性
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.InitValue">
            <summary>
            初始值value属性
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.InitType">
            <summary>
            根据类型初始化控件
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Comboxs.EntityCombox`2.InitEnum">
            <summary>
            初始化枚举
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.Form">
            <summary>
            表单
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.IForm">
            <summary>
            表单
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.IForm.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.IForm.Action(System.String)">
            <summary>
            设置服务端Url
            </summary>
            <param name="url">服务端Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.IForm.Confirm(System.String)">
            <summary>
            保存前弹出确认消息
            </summary>
            <param name="message">确认消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.IForm.Post">
            <summary>
            Post提交方式
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化面板
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.Action(System.String)">
            <summary>
            设置服务端Url
            </summary>
            <param name="url">服务端Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.Confirm(System.String)">
            <summary>
            保存前弹出确认消息
            </summary>
            <param name="message">确认消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.Post">
            <summary>
            Post提交方式
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.GetBeginResult">
            <summary>
            获取起始标签
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.Form.GetEndResult">
            <summary>
            获取结束标签
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.FormExceptionHandlerAttribute">
            <summary>
            EasyUi表单异常处理器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.FormExceptionHandlerAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            处理异常
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2">
            <summary>
            实体文本框
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.ITextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            初始化实体文本框
            </summary>
            <param name="propertyExpression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            初始化实体文本框
            </summary>
            <param name="expression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2._value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2.InitName">
            <summary>
            初始化name属性
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Forms.TextBoxs.EntityTextBox`2.InitValue">
            <summary>
            初始值value属性
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Forms.TextBoxs.TextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.DataGrid`1">
            <summary>
            表格
            </summary>
            <typeparam name="T">表格类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.IDataGrid`1">
            <summary>
            表格
            </summary>
            <typeparam name="T">表格类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.RowNumber(System.Boolean)">
            <summary>
            显示行号
            </summary>
            <param name="isShow">是否显示行号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Fit(System.Boolean)">
            <summary>
            设置自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.FitColumns(System.Boolean)">
            <summary>
            设置列为自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Pagination(System.Boolean,System.Int32)">
            <summary>
            设置分页
            </summary>
            <param name="isPagination">是否分页</param>
            <param name="pageSize">每页显示行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Sort(System.String,System.Boolean)">
            <summary>
            设置排序
            </summary>
            <param name="sortName">排序名</param>
            <param name="isDesc">是否倒排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.CheckOnSelect(System.Boolean)">
            <summary>
            选择表格行时是否同时选中复选框
            </summary>
            <param name="isCheck">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.SelectOnCheck(System.Boolean)">
            <summary>
            选中复选框时是否同时选中表格行
            </summary>
            <param name="isSelect">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.SingleSelect(System.Boolean)">
            <summary>
            是否只能选中一行
            </summary>
            <param name="isSingle">是否只能选中一行</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Strip(System.Boolean)">
            <summary>
            设置是否显示条纹
            </summary>
            <param name="isShow">是否显示条纹</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Toolbar(System.String)">
            <summary>
            设置工具栏
            </summary>
            <param name="toolbarId">工具栏Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Url(System.String)">
            <summary>
            设置加载数据的Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.OnDblClickRow(System.String)">
            <summary>
            设置双击行事件处理函数
            </summary>
            <param name="handler">双击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.OnContextMenu(System.String)">
            <summary>
            设置右键单击行事件处理函数
            </summary>
            <param name="handler">右键单击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.OnLoadSuccess(System.String)">
            <summary>
            设置加载成功事件处理函数
            </summary>
            <param name="handler">加载成功事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Columns(Util.Webs.EasyUi.Grids.IDataGridColumn[])">
            <summary>
            设置列集合
            </summary>
            <param name="columns">列集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.SubGrid(Util.Webs.EasyUi.Grids.ISubDataGrid)">
            <summary>
            设置子表格
            </summary>
            <param name="subGrid">子表格</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Detail(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            设置行展开详细内容
            </summary>
            <param name="url">远程Url</param>
            <param name="isShowBorder">是否显示面板边框</param>
            <param name="fnCreateUrl">创建Url的js函数</param>
            <param name="paramName">发送参数</param>
            <param name="btnDivId">按钮div Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="gridId">表格Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGrid`1.ShowEditDialogByDblClick(System.String)">
            <summary>
            双击表格行，显示编辑表单窗口
            </summary>
            <param name="btnId">编辑按钮Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.#ctor">
            <summary>
            初始化表格
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGrid`1._columns">
            <summary>
            列集合
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.RowNumber(System.Boolean)">
            <summary>
            显示行号
            </summary>
            <param name="isShow">是否显示行号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Fit(System.Boolean)">
            <summary>
            设置自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.FitColumns(System.Boolean)">
            <summary>
            设置列为自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Pagination(System.Boolean,System.Int32)">
            <summary>
            设置分页
            </summary>
            <param name="isPagination">是否分页</param>
            <param name="pageSize">每页显示行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Sort(System.String,System.Boolean)">
            <summary>
            设置排序
            </summary>
            <param name="sortName">排序名</param>
            <param name="isDesc">是否倒排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.CheckOnSelect(System.Boolean)">
            <summary>
            选择表格行时是否同时选中复选框
            </summary>
            <param name="isCheck">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.SelectOnCheck(System.Boolean)">
            <summary>
            选中复选框时是否同时选中表格行
            </summary>
            <param name="isSelect">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.SingleSelect(System.Boolean)">
            <summary>
            是否只能选中一行
            </summary>
            <param name="isSingle">是否只能选中一行</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Strip(System.Boolean)">
            <summary>
            设置是否显示条纹
            </summary>
            <param name="isShow">是否显示条纹</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Toolbar(System.String)">
            <summary>
            设置工具栏
            </summary>
            <param name="toolbarId">工具栏Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Url(System.String)">
            <summary>
            设置加载数据的Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.OnDblClickRow(System.String)">
            <summary>
            设置双击行事件处理函数
            </summary>
            <param name="handler">双击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.OnContextMenu(System.String)">
            <summary>
            设置右键单击行事件处理函数
            </summary>
            <param name="handler">右键单击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.OnLoadSuccess(System.String)">
            <summary>
            设置加载成功事件处理函数
            </summary>
            <param name="handler">加载成功事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Columns(Util.Webs.EasyUi.Grids.IDataGridColumn[])">
            <summary>
            设置列集合
            </summary>
            <param name="columns">列集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.SubGrid(Util.Webs.EasyUi.Grids.ISubDataGrid)">
            <summary>
            设置子表格
            </summary>
            <param name="subGrid">子表格</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Detail(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            设置行展开详细内容
            </summary>
            <param name="url">远程Url</param>
            <param name="isShowBorder">是否显示面板边框</param>
            <param name="fnCreateUrl">创建Url的js函数</param>
            <param name="paramName">发送参数</param>
            <param name="btnDivId">按钮div Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.GetDetailParams(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            获取行展开详细内容参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="gridId">表格Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.GetMenuFunction">
            <summary>
            获取右键菜单函数名
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.ShowEditDialogByDblClick(System.String)">
            <summary>
            双击表格行，显示编辑表单窗口
            </summary>
            <param name="btnId">编辑按钮Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.InitEdit">
            <summary>
            初始化编辑状态
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.GetEditClass">
            <summary>
            获取编辑class
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.AllowEdit">
            <summary>
            允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.AddFrozenColumns(System.Text.StringBuilder)">
            <summary>
            添加冻结列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGrid`1.AddColumns(System.Text.StringBuilder)">
            <summary>
            添加非冻结列
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.DataGridColumn">
            <summary>
            表格列
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.IDataGridColumn">
            <summary>
            表格列
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.IDataGridColumn`1">
            <summary>
            表格列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Field(System.String)">
            <summary>
            设置字段名
            </summary>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Text(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Align(Util.Webs.EasyUi.AlignLeftRigthCenter,Util.Webs.EasyUi.AlignLeftRigthCenter)">
            <summary>
            设置对齐方式
            </summary>
            <param name="headerAlign">标题对齐方式</param>
            <param name="align">内容对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Sort(System.Boolean)">
            <summary>
            是否允许排序
            </summary>
            <param name="isSort">是否允许排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.CheckBox(System.Boolean)">
            <summary>
            显示复选框
            </summary>
            <param name="isShow">是否显示复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Format(System.String)">
            <summary>
            设置格式化
            </summary>
            <param name="fn">格式化函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.FormatBool">
            <summary>
            格式化布尔值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.FormatDate">
            <summary>
            格式化日期
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.FormatImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            格式化图片
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="isClass">值是否为class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Frozen">
            <summary>
            冻结列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Edit">
            <summary>
            允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Combox(System.String,System.String,System.String,System.String)">
            <summary>
            显示下拉列表
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"value"</param>
            <param name="textField">文本字段名，默认为"text"</param>
            <param name="groupField">组字段名，默认为"group"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Combox(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            显示下拉列表
            </summary>
            <param name="items">项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Combox``1">
            <summary>
            绑定枚举下拉列表
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.ComboTree(System.String,System.String,System.String)">
            <summary>
            显示下拉树
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"id"</param>
            <param name="textField">文本字段名，默认为"text"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Required(System.Boolean)">
            <summary>
            验证必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.PanelHeight(System.String)">
            <summary>
            设置面板高度，即下拉列表的高度
            </summary>
            <param name="height">面板高度，值为"auto"为自适应，也可以指定高度，范例"100"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Editable(System.Boolean)">
            <summary>
            设置是否可编辑
            </summary>
            <param name="editable">true为可编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.IDataGridColumn`1.Lookup(Util.Webs.EasyUi.Configs.LookupOption)">
            <summary>
            查找带回
            </summary>
            <param name="option">查找带回配置选项</param>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.IDataGridColumn`1.IsFrozen">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.IDataGridColumn`1.IsEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.#ctor(System.Boolean)">
            <summary>
            初始化表格列
            </summary>
            <param name="isEdit">是否允许编辑</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._isFrozen">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._isEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._editorType">
            <summary>
            编辑控件类型
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._validator">
            <summary>
            验证器
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.DataGridColumn._builder">
            <summary>
            Json属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Field(System.String)">
            <summary>
            设置字段名
            </summary>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Text(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Align(Util.Webs.EasyUi.AlignLeftRigthCenter,Util.Webs.EasyUi.AlignLeftRigthCenter)">
            <summary>
            设置对齐方式
            </summary>
            <param name="headerAlign">标题对齐方式</param>
            <param name="align">内容对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Sort(System.Boolean)">
            <summary>
            是否允许排序
            </summary>
            <param name="isSort">是否允许排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.CheckBox(System.Boolean)">
            <summary>
            是否显示复选框
            </summary>
            <param name="isShow">是否显示复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Combox(System.String,System.String,System.String,System.String)">
            <summary>
            显示下拉列表
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"value"</param>
            <param name="textField">文本字段名，默认为"text"</param>
            <param name="groupField">组字段名，默认为"group"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.AddComboxParams(System.String,System.String,System.String)">
            <summary>
            添加下拉列表参数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Combox(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            显示下拉列表
            </summary>
            <param name="items">项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Combox``1">
            <summary>
            绑定枚举下拉列表
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.ComboTree(System.String,System.String,System.String)">
            <summary>
            显示下拉树
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"id"</param>
            <param name="textField">文本字段名，默认为"text"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.PanelHeight(System.String)">
            <summary>
            设置面板高度，即下拉列表的高度
            </summary>
            <param name="height">面板高度，值为"auto"为自适应，也可以指定高度，范例"100"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Editable(System.Boolean)">
            <summary>
            设置是否可编辑
            </summary>
            <param name="editable">true为可编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Format(System.String)">
            <summary>
            设置格式化
            </summary>
            <param name="fn">格式化函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.FormatBool">
            <summary>
            格式化布尔值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.FormatDate">
            <summary>
            格式化日期
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.FormatImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            格式化图片
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="isClass">值是否为class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Frozen">
            <summary>
            冻结列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Edit">
            <summary>
            允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Required(System.Boolean)">
            <summary>
            验证必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Required(System.String)">
            <summary>
            验证必填项
            </summary>
            <param name="message">验证失败消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Length(System.Int32,System.Int32)">
            <summary>
            设置长度验证
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.MaxLength(System.Int32)">
            <summary>
            设置最大长度验证
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Date">
            <summary>
            显示日期框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Number(System.Int32)">
            <summary>
            设置为数值文本框
            </summary>
            <param name="precision">精度，即小数位数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Lookup(Util.Webs.EasyUi.Configs.LookupOption)">
            <summary>
            查找带回
            </summary>
            <param name="option">查找带回配置选项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Int">
            <summary>
            设置为整数文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.Email">
            <summary>
            设置Email验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.MobilePhone">
            <summary>
            设置手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.ValidateUrl">
            <summary>
            设置Url验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.InitEditor">
            <summary>
            初始化编辑器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetEditor">
            <summary>
            获取编辑器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetEditorOptions">
            <summary>
            获取编辑器选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetEditorType(System.String)">
            <summary>
            获取编辑器类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetEditorOptions(System.Text.StringBuilder,System.String)">
            <summary>
            获取验证选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.DataGridColumn.GetResult(System.Text.StringBuilder)">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.DataGridColumn.IsFrozen">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.DataGridColumn.IsEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.DataGrid">
            <summary>
            表格
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.IDataGrid">
            <summary>
            表格
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2">
            <summary>
            实体表格列
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Web.Mvc.HtmlHelper{`0},System.Boolean)">
            <summary>
            初始化实体文本框
            </summary>
            <param name="expression">属性表达式</param>
            <param name="helper">HtmlHelper</param>
            <param name="isEdit">是否允许编辑</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2._metadata">
            <summary>
            值
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2._expression">
            <summary>
            属性表达式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2._memberInfo">
            <summary>
            成员
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitField">
            <summary>
            初始化字段属性
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitText">
            <summary>
            初始化文本
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitType">
            <summary>
            初始化类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitDate">
            <summary>
            初始化日期类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitBool">
            <summary>
            初始化布尔类型
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntityDataGridColumn`2.InitEnum">
            <summary>
            初始化枚举类型
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.EntitySubGrid`2">
            <summary>
            实体子表格
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.SubDataGrid">
            <summary>
            子表格
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.ISubDataGrid">
            <summary>
            子表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ISubDataGrid.GetOption">
            <summary>
            获取配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ISubDataGrid.Columns(Util.Webs.EasyUi.Grids.ISubGridColumn[])">
            <summary>
            设置列集合
            </summary>
            <param name="columns">列集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ISubDataGrid.Property(System.String)">
            <summary>
            设置导航属性，用于加载子表格
            </summary>
            <param name="navigateProperty">导航属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.#ctor">
            <summary>
            初始化子表格
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.SubDataGrid._subGridOption">
            <summary>
            子表格配置项
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.SubDataGrid._option">
            <summary>
            表格配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.GetOption">
            <summary>
            获取配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.ToHtmlString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.RowNumber(System.Boolean)">
            <summary>
            显示行号
            </summary>
            <param name="isShow">是否显示行号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Fit(System.Boolean)">
            <summary>
            设置自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.FitColumns(System.Boolean)">
            <summary>
            设置列为自适应布局
            </summary>
            <param name="isFit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Pagination(System.Boolean,System.Int32)">
            <summary>
            设置分页
            </summary>
            <param name="isPagination">是否分页</param>
            <param name="pageSize">每页显示行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Sort(System.String,System.Boolean)">
            <summary>
            设置排序
            </summary>
            <param name="sortName">排序名</param>
            <param name="isDesc">是否倒排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.CheckOnSelect(System.Boolean)">
            <summary>
            选择表格行时是否同时选中复选框
            </summary>
            <param name="isCheck">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.SelectOnCheck(System.Boolean)">
            <summary>
            选中复选框时是否同时选中表格行
            </summary>
            <param name="isSelect">是否选中</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.SingleSelect(System.Boolean)">
            <summary>
            是否只能选中一行
            </summary>
            <param name="isSingle">是否只能选中一行</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Strip(System.Boolean)">
            <summary>
            设置是否显示条纹
            </summary>
            <param name="isShow">是否显示条纹</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Toolbar(System.String)">
            <summary>
            设置工具栏
            </summary>
            <param name="toolbarId">工具栏Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Url(System.String)">
            <summary>
            设置加载数据的Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.OnDblClickRow(System.String)">
            <summary>
            设置双击行事件处理函数
            </summary>
            <param name="handler">双击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.OnContextMenu(System.String)">
            <summary>
            设置右键单击行事件处理函数
            </summary>
            <param name="handler">右键单击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.OnLoadSuccess(System.String)">
            <summary>
            设置加载成功事件处理函数
            </summary>
            <param name="handler">加载成功事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.SubGrid(Util.Webs.EasyUi.Grids.ISubDataGrid)">
            <summary>
            设置子表格
            </summary>
            <param name="subGrid">子表格</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Columns(Util.Webs.EasyUi.Grids.IDataGridColumn[])">
            <summary>
            设置列集合
            </summary>
            <param name="columns">列集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Columns(Util.Webs.EasyUi.Grids.ISubGridColumn[])">
            <summary>
            设置列集合
            </summary>
            <param name="columns">列集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Property(System.String)">
            <summary>
            设置导航属性，用于加载子表格
            </summary>
            <param name="navigateProperty">导航属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Detail(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            设置行展开详细内容
            </summary>
            <param name="url">远程Url</param>
            <param name="isShowBorder">是否显示面板边框</param>
            <param name="fnCreateUrl">创建Url的js函数</param>
            <param name="paramName">发送参数</param>
            <param name="btnDivId">按钮div Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.ShowEditDialogByDblClick(System.String)">
            <summary>
            双击表格行，显示编辑表单窗口
            </summary>
            <param name="btnId">编辑按钮Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="gridId">表格Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Width(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
            <param name="isPercent">是否百分比</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Height(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.GetId">
            <summary>
            获取标识
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddAttribute(System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddStyle(System.String,System.String)">
            <summary>
            添加样式
            </summary>
            <param name="name">样式名称</param>
            <param name="value">样式值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddClass(System.String)">
            <summary>
            添加class属性
            </summary>
            <param name="class">class属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddDataOption(System.String,System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
            <param name="isAddQuote">是否为值添加引号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddDataOption(System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddDataOption(System.String,System.Nullable{System.Boolean})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.AddAfter(System.String)">
            <summary>
            在控件后添加html
            </summary>
            <param name="html">Html</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Margin(System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="value">外边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Margin(System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Padding(System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="value">内边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Padding(System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubDataGrid.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGrid`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{`1}}},System.Func{`1,Util.Webs.EasyUi.Grids.ISubGridColumn[]})">
            <summary>
            初始化实体子表格
            </summary>
            <param name="expression">表达式</param>
            <param name="funcCreateColumns">创建列集合方法</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGrid`2.InitField(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{`1}}})">
            <summary>
            初始化字段
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGrid`2.InitColumns(System.Func{`1,Util.Webs.EasyUi.Grids.ISubGridColumn[]})">
            <summary>
            初始化列集合
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.EntitySubGridColumn`1">
            <summary>
            实体子表格列
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.SubGridColumn">
            <summary>
            子表格列
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.ISubGridColumn">
            <summary>
            子表格列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ISubGridColumn.GetOption">
            <summary>
            获取配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.#ctor">
            <summary>
            初始化子表格列
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Grids.SubGridColumn._option">
            <summary>
            表格列配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.GetOption">
            <summary>
            获取列配置项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.ToHtmlString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Required(System.String)">
            <summary>
            设置必填项
            </summary>
            <param name="message">验证失败消息</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.MaxLength(System.Int32)">
            <summary>
            设置最大长度验证
            </summary>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Length(System.Int32,System.Int32)">
            <summary>
            设置长度验证
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Date">
            <summary>
            设置为日期控件，不带时间
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Number(System.Int32)">
            <summary>
            设置为数值文本控件，只能输入数值
            </summary>
            <param name="precision">精度，即小数位数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Int">
            <summary>
            设置为整数文本控件，只能输入整数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Field(System.String)">
            <summary>
            设置字段名
            </summary>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Text(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Align(Util.Webs.EasyUi.AlignLeftRigthCenter,Util.Webs.EasyUi.AlignLeftRigthCenter)">
            <summary>
            设置对齐方式
            </summary>
            <param name="headerAlign">标题对齐方式</param>
            <param name="align">内容对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Sort(System.Boolean)">
            <summary>
            是否允许排序
            </summary>
            <param name="isSort">是否允许排序</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.CheckBox(System.Boolean)">
            <summary>
            是否显示复选框
            </summary>
            <param name="isShow">是否显示复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Combox(System.String,System.String,System.String,System.String)">
            <summary>
            显示下拉列表
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"value"</param>
            <param name="textField">文本字段名，默认为"text"</param>
            <param name="groupField">组字段名，默认为"group"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Combox(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Forms.Comboxs.ComboxItem})">
            <summary>
            显示下拉列表
            </summary>
            <param name="items">项集合</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Combox``1">
            <summary>
            绑定枚举下拉列表
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.ComboTree(System.String,System.String,System.String)">
            <summary>
            显示下拉树
            </summary>
            <param name="url">远程Url，返回Json数据</param>
            <param name="valueField">值字段名，默认为"id"</param>
            <param name="textField">文本字段名，默认为"text"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.PanelHeight(System.String)">
            <summary>
            设置面板高度，即下拉列表的高度
            </summary>
            <param name="height">面板高度，值为"auto"为自适应，也可以指定高度，范例"100"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Editable(System.Boolean)">
            <summary>
            设置是否可编辑
            </summary>
            <param name="editable">true为可编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Format(System.String)">
            <summary>
            设置格式化
            </summary>
            <param name="fn">格式化函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.FormatBool">
            <summary>
            格式化布尔值
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.FormatDate">
            <summary>
            格式化日期
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.FormatImage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            格式化图片
            </summary>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="isClass">值是否为class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.GetId">
            <summary>
            获取标识
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Width(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
            <param name="isPercent">是否百分比</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Height(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Frozen">
            <summary>
            冻结列
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Edit">
            <summary>
            允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Required(System.Boolean)">
            <summary>
            验证必填项
            </summary>
            <param name="isRequired">true为必填项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Email">
            <summary>
            设置Email验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.MobilePhone">
            <summary>
            设置手机号验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.ValidateUrl">
            <summary>
            设置Url验证
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddAttribute(System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="name">属性名,范例：class</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddStyle(System.String,System.String)">
            <summary>
            添加样式
            </summary>
            <param name="name">样式名称</param>
            <param name="value">样式值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddClass(System.String)">
            <summary>
            添加class属性
            </summary>
            <param name="class">class属性</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddDataOption(System.String,System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
            <param name="isAddQuote">是否为值添加引号</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddDataOption(System.String,System.Boolean)">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddDataOption(System.String,System.Nullable{System.Boolean})">
            <summary>
            添加data-options属性
            </summary>
            <param name="name">option属性名</param>
            <param name="value">option属性值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.AddAfter(System.String)">
            <summary>
            在控件后添加html
            </summary>
            <param name="html">Html</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Margin(System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="value">外边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Margin(System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Margin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置外边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Padding(System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="value">内边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Padding(System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="topBottom">上下边距值</param>
            <param name="leftRight">左右边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Padding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置内边距
            </summary>
            <param name="top">上边距值</param>
            <param name="right">右边距值</param>
            <param name="bottom">下边距值</param>
            <param name="left">左边距值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.SubGridColumn.Lookup(Util.Webs.EasyUi.Configs.LookupOption)">
            <summary>
            查找带回
            </summary>
            <param name="option">查找带回配置选项</param>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.SubGridColumn.IsFrozen">
            <summary>
            是否冻结
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Grids.SubGridColumn.IsEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGridColumn`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>
            初始化实体子表格列
            </summary>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGridColumn`1.InitField(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>
            初始化字段
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.EntitySubGridColumn`1.InitTitle(System.Linq.Expressions.Expression{System.Func{`0}})">
            <summary>
            初始化标题
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.ITreeGrid">
            <summary>
            树型表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ITreeGrid.IdField(System.String)">
            <summary>
            设置Id属性名
            </summary>
            <param name="field">Id属性名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ITreeGrid.TreeField(System.String)">
            <summary>
            设置树属性名
            </summary>
            <param name="field">属性名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ITreeGrid.EnableDrag(System.Int32)">
            <summary>
            启用拖拽
            </summary>
            <param name="minLevel">允许拖动的最小级数,设置为2，表示第1级无法拖动</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.ITreeGrid.Animate">
            <summary>
            开启动画效果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Grids.TreeGrid">
            <summary>
            树型表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.#ctor">
            <summary>
            初始化树型表格
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.IdField(System.String)">
            <summary>
            设置Id属性名
            </summary>
            <param name="field">Id属性名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.TreeField(System.String)">
            <summary>
            设置树属性名
            </summary>
            <param name="field">属性名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.GetEditClass">
            <summary>
            获取编辑class
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.OnContextMenu(System.String)">
            <summary>
            设置右键单击行事件处理函数
            </summary>
            <param name="handler">右键单击行事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.EnableDrag(System.Int32)">
            <summary>
            启用拖拽
            </summary>
            <param name="minLevel">允许拖动的最小级数,设置为2，表示第1级无法拖动</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.Animate">
            <summary>
            开启动画效果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Grids.TreeGrid.GetMenuFunction">
            <summary>
            获取右键菜单函数名
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.HtmlHelperExtentions">
            <summary>
            HtmlHelper扩展 - EasyUi扩展
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.HtmlHelperExtentions.EasyUi``1(System.Web.Mvc.HtmlHelper{``0})">
            <summary>
            创建EasyUi服务
            </summary>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.ILayout">
            <summary>
            布局
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.ILayoutRegion">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.ILayoutRegion`1">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Top">
            <summary>
            设置为顶部区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Bottom">
            <summary>
            设置为底部区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Left">
            <summary>
            设置为左侧区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Right">
            <summary>
            设置为右侧区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Center">
            <summary>
            设置为中间内容区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Title(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Border(System.Boolean)">
            <summary>
            显示边框
            </summary>
            <param name="isShow">是否显示边框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Split">
            <summary>
            显示分隔条
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Icon(System.String)">
            <summary>
            设置图标
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Href(System.String)">
            <summary>
            设置Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.Collapsible(System.Boolean)">
            <summary>
            允许折叠
            </summary>
            <param name="collapsible">是否允许折叠</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.MinWidth(System.Int32)">
            <summary>
            设置最小宽度
            </summary>
            <param name="minWidth">最小宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.MinHeight(System.Int32)">
            <summary>
            设置最小高度
            </summary>
            <param name="minHeight">最小高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.MaxWidth(System.Int32)">
            <summary>
            设置最大宽度
            </summary>
            <param name="maxWidth">最大宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ILayoutRegion`1.MaxHeight(System.Int32)">
            <summary>
            设置最大高度
            </summary>
            <param name="maxHeight">最大高度</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.IPanel">
            <summary>
            面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.IPanel.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.IPanel.Fit">
            <summary>
            设置自适应
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.IPanel.Footer(System.String)">
            <summary>
            设置页脚
            </summary>
            <param name="id">页脚div的id</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.ITabPanel">
            <summary>
            选项卡面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Title(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Collapsible">
            <summary>
            设置允许折叠
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Content(System.String)">
            <summary>
            设置内容
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Url(System.String)">
            <summary>
            设置远程加载url
            </summary>
            <param name="url">远程加载url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Cache(System.Boolean)">
            <summary>
            设置缓存
            </summary>
            <param name="cache">是否缓存</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Closable(System.Boolean)">
            <summary>
            设置允许关闭
            </summary>
            <param name="closable">是否允许关闭</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabPanel.Select">
            <summary>
            设置选中
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.ITabs">
            <summary>
            选项卡
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.Plain(System.Boolean)">
            <summary>
            启用平滑效果
            </summary>
            <param name="plain">是否启用平滑效果</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.Fit">
            <summary>
            设置自适应
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.Border(System.Boolean)">
            <summary>
            设置边框
            </summary>
            <param name="isShow">是否显示边框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.TabPosition(Util.Webs.EasyUi.Align)">
            <summary>
            设置选项卡面板位置
            </summary>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.HeaderWidth(System.Int32)">
            <summary>
            设置选项卡标题宽度
            </summary>
            <param name="width">标题宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.TabWidth(System.Int32)">
            <summary>
            设置选项卡面板宽度
            </summary>
            <param name="width">选项卡面板宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.ITabs.TabHeight(System.Int32)">
            <summary>
            设置选项卡面板高度
            </summary>
            <param name="width">选项卡面板高度</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.Layout">
            <summary>
            布局
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Layout.#ctor(Util.Webs.TextWriters.ITextWriter,System.Boolean)">
            <summary>
            初始化布局
            </summary>
            <param name="textWriter">文本写入器</param>
            <param name="fit">自适应布局</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.LayoutRegion">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.LayoutRegion`1">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化布局区域
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Top">
            <summary>
            设置为顶部区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Bottom">
            <summary>
            设置为底部区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Left">
            <summary>
            设置为左侧区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Right">
            <summary>
            设置为右侧区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Center">
            <summary>
            设置为中间内容区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Title(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Border(System.Boolean)">
            <summary>
            显示边框
            </summary>
            <param name="isShow">是否显示边框，默认为显示</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Split">
            <summary>
            显示分隔条
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Icon(System.String)">
            <summary>
            设置图标
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Href(System.String)">
            <summary>
            设置Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Collapsible(System.Boolean)">
            <summary>
            允许折叠
            </summary>
            <param name="collapsible">是否允许折叠</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Width(System.Nullable{System.Int32},System.Boolean)">
            <summary>
            设置宽度
            </summary>
            <param name="width">宽度</param>
            <param name="isPercent">是否百分比</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.Height(System.Int32)">
            <summary>
            设置高度
            </summary>
            <param name="height">高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.MinWidth(System.Int32)">
            <summary>
            设置最小宽度
            </summary>
            <param name="minWidth">最小宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.MinHeight(System.Int32)">
            <summary>
            设置最小高度
            </summary>
            <param name="minHeight">最小高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.MaxWidth(System.Int32)">
            <summary>
            设置最大宽度
            </summary>
            <param name="maxWidth">最大宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion`1.MaxHeight(System.Int32)">
            <summary>
            设置最大高度
            </summary>
            <param name="maxHeight">最大高度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.LayoutRegion.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化布局区域
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.Panel">
            <summary>
            面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Panel.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化面板
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Panel.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Panel.Fit">
            <summary>
            设置自适应
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Panel.Footer(System.String)">
            <summary>
            设置页脚
            </summary>
            <param name="id">页脚div的id</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.TabPanel">
            <summary>
            选项卡面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化选项卡面板
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Id(System.String)">
            <summary>
            设置标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Title(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Collapsible">
            <summary>
            允许折叠
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Content(System.String)">
            <summary>
            设置内容
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Url(System.String)">
            <summary>
            设置远程加载url
            </summary>
            <param name="url">远程加载url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Cache(System.Boolean)">
            <summary>
            设置缓存
            </summary>
            <param name="cache">是否缓存</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Closable(System.Boolean)">
            <summary>
            设置允许关闭
            </summary>
            <param name="closable">是否允许关闭</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.TabPanel.Select">
            <summary>
            设置选中
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Layouts.Tabs">
            <summary>
            选项卡
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.#ctor(Util.Webs.TextWriters.ITextWriter)">
            <summary>
            初始化选项卡
            </summary>
            <param name="textWriter">文本写入器</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.Plain(System.Boolean)">
            <summary>
            启用平滑效果
            </summary>
            <param name="plain">是否启用平滑效果</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.Fit">
            <summary>
            设置自适应
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.Border(System.Boolean)">
            <summary>
            设置边框
            </summary>
            <param name="isShow">是否显示边框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.TabPosition(Util.Webs.EasyUi.Align)">
            <summary>
            设置选项卡面板位置
            </summary>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.HeaderWidth(System.Int32)">
            <summary>
            设置选项卡标题宽度
            </summary>
            <param name="width">标题宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.TabWidth(System.Int32)">
            <summary>
            设置选项卡面板宽度
            </summary>
            <param name="width">选项卡面板宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Layouts.Tabs.TabHeight(System.Int32)">
            <summary>
            设置选项卡面板高度
            </summary>
            <param name="width">选项卡面板高度</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Menus.IMenu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.ZIndex(System.Int32)">
            <summary>
            设置zIndex属性
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.Position(System.Int32,System.Int32)">
            <summary>
            设置位置
            </summary>
            <param name="left">左部偏移量</param>
            <param name="top">顶部偏移量</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.MinWidth(System.Int32)">
            <summary>
            设置最小宽度
            </summary>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.Duration(System.Int32)">
            <summary>
            设置显示持续时间
            </summary>
            <param name="time">显示持续时间，当鼠标离开菜单时，经过该时间自动隐藏，单位：毫秒</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.HideOnUnHover(System.Boolean)">
            <summary>
            设置当鼠标离开菜单时是否隐藏菜单
            </summary>
            <param name="isHide">是否隐藏</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenu.Items(Util.Webs.EasyUi.Menus.IMenuItem[])">
            <summary>
            设置菜单项
            </summary>
            <param name="items">菜单项</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Menus.IMenuItem">
            <summary>
            菜单项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenuItem.Text(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenuItem.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenuItem.Href(System.String)">
            <summary>
            设置Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenuItem.Disable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.IMenuItem.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Menus.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.#ctor(System.String)">
            <summary>
            初始化菜单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Menus.Menu._items">
            <summary>
            菜单项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.ZIndex(System.Int32)">
            <summary>
            设置zIndex属性
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.Position(System.Int32,System.Int32)">
            <summary>
            设置位置
            </summary>
            <param name="left">左部偏移量</param>
            <param name="top">顶部偏移量</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.MinWidth(System.Int32)">
            <summary>
            设置最小宽度
            </summary>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.Duration(System.Int32)">
            <summary>
            设置显示持续时间
            </summary>
            <param name="time">显示持续时间，当鼠标离开菜单时，经过该时间自动隐藏，单位：毫秒</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.HideOnUnHover(System.Boolean)">
            <summary>
            设置当鼠标离开菜单时是否隐藏菜单
            </summary>
            <param name="isHide">是否隐藏</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.Items(Util.Webs.EasyUi.Menus.IMenuItem[])">
            <summary>
            设置菜单项
            </summary>
            <param name="items">菜单项</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.Menu.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Menus.MenuItem">
            <summary>
            菜单项
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Menus.MenuItem._text">
            <summary>
            文本
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.Text(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.Icon(System.String)">
            <summary>
            设置图标class
            </summary>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.Href(System.String)">
            <summary>
            设置Url
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.Disable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Menus.MenuItem.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Paginations.IPagination">
            <summary>
            分页
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.Total(System.Int32)">
            <summary>
            设置总记录数
            </summary>
            <param name="number">总记录数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.PageSize(System.Int32)">
            <summary>
            设置每页显示行数
            </summary>
            <param name="number">每页显示行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.PageList(System.Int32[])">
            <summary>
            设置分页大小集合
            </summary>
            <param name="numbers">分页大小集合,范例：10,20,30,50</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.PageNumber(System.Int32)">
            <summary>
            设置当前第几页
            </summary>
            <param name="number">第几页</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.OnSelectPage(System.String)">
            <summary>
            设置分页事件处理函数
            </summary>
            <param name="handler">分页事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.IPagination.Url(System.String,System.String)">
            <summary>
            设置分页Url
            </summary>
            <param name="url">点击分页按钮时刷新该Url</param>
            <param name="fnRefresh">刷新操作</param>
        </member>
        <member name="T:Util.Webs.EasyUi.Paginations.Pagination">
            <summary>
            分页
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.#ctor">
            <summary>
            初始化分页
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.Total(System.Int32)">
            <summary>
            设置总记录数
            </summary>
            <param name="number">总记录数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.PageSize(System.Int32)">
            <summary>
            设置每页显示行数
            </summary>
            <param name="number">每页显示行数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.PageList(System.Int32[])">
            <summary>
            设置分页大小集合
            </summary>
            <param name="numbers">分页大小集合,范例：10,20,30,50</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.PageNumber(System.Int32)">
            <summary>
            设置当前第几页
            </summary>
            <param name="number">第几页</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.OnSelectPage(System.String)">
            <summary>
            设置分页事件处理函数
            </summary>
            <param name="handler">分页事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.Url(System.String,System.String)">
            <summary>
            设置分页Url
            </summary>
            <param name="url">点击分页按钮时刷新该Url</param>
            <param name="fnRefresh">刷新操作</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Paginations.Pagination.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Results.DataGridResult">
            <summary>
            DataGrid输出结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Results.ResultBase">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.ResultBase.GetResult">
            <summary>
            获取输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.DataGridResult.#ctor(System.Collections.IEnumerable,System.Int32)">
            <summary>
            初始化DataGrid输出结果
            </summary>
            <param name="data">数据列表</param>
            <param name="totalCount">总行数</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.DataGridResult._data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.DataGridResult._totalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.DataGridResult.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Results.EasyUiResult">
            <summary>
            EasyUi提交表单返回结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.EasyUiResult.#ctor(Util.Webs.StateCode,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            初始化EasyUi提交表单返回结果
            </summary>
            <param name="code">状态码</param>
            <param name="message">消息</param>
            <param name="data">数据</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.EasyUiResult._code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.EasyUiResult._message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.EasyUiResult._data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.EasyUiResult.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Results.TreeGridResult">
            <summary>
            树型表格输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeGridResult.#ctor(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Trees.ITreeNode},System.Boolean,System.Int32)">
            <summary>
            初始化树型表格输出结果
            </summary>
            <param name="data">数据列表</param>
            <param name="isAyncLoad">是否异步加载</param>
            <param name="totalCount">总行数</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.TreeGridResult._data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.TreeGridResult._isAyncLoad">
            <summary>
            是否异步加载
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.TreeGridResult._totalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeGridResult.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeGridResult.GetNodes">
            <summary>
            处理节点
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Results.TreeResult">
            <summary>
            树结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.#ctor(System.Collections.Generic.IEnumerable{Util.Webs.EasyUi.Trees.ITreeNode},System.Boolean)">
            <summary>
            初始化树结果
            </summary>
            <param name="nodes">树节点集合</param>
            <param name="isAyncLoad">是否异步加载</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.TreeResult._nodes">
            <summary>
            树节点集合
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Results.TreeResult._isAsyncLoad">
            <summary>
            是否异步加载
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.ToString">
            <summary>
            输出结果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.GetNodes">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.IsRoot(Util.Webs.EasyUi.Trees.ITreeNode)">
            <summary>
            是否根节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.AddNode(System.Collections.Generic.List{Util.Webs.EasyUi.Trees.ITreeNode},Util.Webs.EasyUi.Trees.ITreeNode)">
            <summary>
            添加节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.IsLeaf(Util.Webs.EasyUi.Trees.ITreeNode)">
            <summary>
            是否叶节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.SetState(Util.Webs.EasyUi.Trees.ITreeNode)">
            <summary>
            设置叶节点状态
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Results.TreeResult.GetChilds(Util.Webs.EasyUi.Trees.ITreeNode)">
            <summary>
            获取节点直接下级
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Services.EasyUiService`1">
            <summary>
            EasyUi服务
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="T:Util.Webs.EasyUi.Services.IEasyUiService`1">
            <summary>
            EasyUi服务
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Layout(System.Boolean)">
            <summary>
            布局
            </summary>
            <param name="fit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.LayoutRegion">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Panel">
            <summary>
            面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Tabs">
            <summary>
            选项卡
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.TabPanel(System.String)">
            <summary>
            选项卡面板
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Form(System.String)">
            <summary>
            表单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Button(System.String)">
            <summary>
            按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.DialogButton(System.String,System.String)">
            <summary>
            弹出窗口按钮
            </summary>
            <param name="text">按钮文本</param>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.TextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Combox(System.String)">
            <summary>
            组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Combox(System.String,System.String,System.String,System.String)">
            <summary>
            组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Menu(System.String)">
            <summary>
            菜单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.MenuItem(System.String,System.String,System.String)">
            <summary>
            菜单项
            </summary>
            <param name="id">Id</param>
            <param name="text">文本</param>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Grid(System.String)">
            <summary>
            表格
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.SubGrid(System.String)">
            <summary>
            子表格
            </summary>
            <param name="property">集合属性，范例：如果对象包含A元素集合List1，A元素包含集合List2，展示List2使用"List2"，不要写成"List1.List2"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.SubGrid``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,Util.Webs.EasyUi.Grids.ISubGridColumn[]})">
            <summary>
            子表格
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">集合属性,范例：t => t.A，如果存在多级导航属性，可以使用FirstOrDefault，范例： t => t.A.FirstOrDefault().B</param>
            <param name="funcCreateColumns">创建列集合方法，范例：c=>new[]{ Html.EasyUi().SubGridColumn( () => c.A,100 ),Html.EasyUi().SubGridColumn( () => c.B,100 )}</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.GridColumn(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            表格列
            </summary>
            <param name="field">字段名</param>
            <param name="text">文本</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.TextBox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            文本框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Combox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="defaultText">默认值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Combox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String)">
            <summary>
            组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="id">控件Id</param>
            <param name="url">远程Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.GridColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            表格列
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="width">宽度</param>
            <param name="isEdit">是否允许编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.TreeGrid(System.String,System.String,System.String)">
            <summary>
            树型表格
            </summary>
            <param name="id">Id</param>
            <param name="treeField">树显示字段名,默认"Text"</param>
            <param name="idField">Id字段名,默认"Id"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Tree(System.String,System.String)">
            <summary>
            树
            </summary>
            <param name="url">设置远程url</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.ComboTree(System.String,System.String,System.String,System.String)">
            <summary>
            树组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.SubGridColumn(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            子表格列
            </summary>
            <param name="field">字段名</param>
            <param name="text">标题文本</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.SubGridColumn``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Nullable{System.Int32})">
            <summary>
            子表格列
            </summary>
            <param name="expression">属性表达式，范例：() => c.A</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.IEasyUiService`1.Pagination">
            <summary>
            分页
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.#ctor(System.Web.Mvc.HtmlHelper{`0})">
            <summary>
            初始化EasyUi服务
            </summary>
            <param name="helper">HtmlHelper</param>
        </member>
        <member name="F:Util.Webs.EasyUi.Services.EasyUiService`1._helper">
            <summary>
            HtmlHelper
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Layout(System.Boolean)">
            <summary>
            布局
            </summary>
            <param name="fit">是否自适应</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.LayoutRegion">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Panel">
            <summary>
            面板
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Tabs">
            <summary>
            选项卡
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.TabPanel(System.String)">
            <summary>
            选项卡面板
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Form(System.String)">
            <summary>
            表单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Button(System.String)">
            <summary>
            按钮
            </summary>
            <param name="text">按钮文本</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.DialogButton(System.String,System.String)">
            <summary>
            弹出窗口按钮
            </summary>
            <param name="text">按钮文本</param>
            <param name="url">弹出窗口网址</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.TextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Combox(System.String)">
            <summary>
            组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Combox(System.String,System.String,System.String,System.String)">
            <summary>
            组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Menu(System.String)">
            <summary>
            菜单
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.MenuItem(System.String,System.String,System.String)">
            <summary>
            菜单项
            </summary>
            <param name="id">Id</param>
            <param name="text">文本</param>
            <param name="iconClass">图标class</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Grid(System.String)">
            <summary>
            表格
            </summary>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.SubGrid(System.String)">
            <summary>
            子表格
            </summary>
            <param name="property">集合属性，范例：如果对象包含A元素集合List1，A元素包含集合List2，展示List2使用"List2"，不要写成"List1.List2"</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.SubGrid``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,Util.Webs.EasyUi.Grids.ISubGridColumn[]})">
            <summary>
            子表格
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">集合属性,范例：t => t.Users</param>
            <param name="funcCreateColumns">创建列集合方法</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.GridColumn(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            表格列
            </summary>
            <param name="field">字段名</param>
            <param name="text">文本</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.TextBox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            文本框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Combox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="defaultText">默认值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Combox``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String)">
            <summary>
            组合框
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="id">控件Id</param>
            <param name="url">远程Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.GridColumn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            创建表格列
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">属性表达式</param>
            <param name="width">宽度</param>
            <param name="isEdit">是否允许编辑</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.TreeGrid(System.String,System.String,System.String)">
            <summary>
            树型表格
            </summary>
            <param name="id">Id</param>
            <param name="treeField">树显示字段名</param>
            <param name="idField">Id字段名</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Tree(System.String,System.String)">
            <summary>
            树
            </summary>
            <param name="url">设置远程url</param>
            <param name="id">Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.ComboTree(System.String,System.String,System.String,System.String)">
            <summary>
            树组合框
            </summary>
            <param name="name">name，用于服务端接收值</param>
            <param name="id">Id</param>
            <param name="url">远程Url</param>
            <param name="value">选中的值</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.SubGridColumn(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            子表格列
            </summary>
            <param name="field">字段名</param>
            <param name="text">标题文本</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.SubGridColumn``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Nullable{System.Int32})">
            <summary>
            子表格列
            </summary>
            <param name="expression">表达式</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Services.EasyUiService`1.Pagination">
            <summary>
            创建分页
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.ITree">
            <summary>
            树
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.ITreeNode">
            <summary>
            树节点
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.Id">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.ParentId">
            <summary>
            父标识
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.state">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.ITreeNode.children">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.LoadMode">
            <summary>
            加载模式
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.LoadMode.Sync">
            <summary>
            同步
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.LoadMode.Async">
            <summary>
            异步
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.LoadMode.RootAsync">
            <summary>
            根节点异步加载，下级节点一次性加载
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.Tree">
            <summary>
            树
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.#ctor">
            <summary>
            初始化树
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.Tree._option">
            <summary>
            树选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Url(System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Animate">
            <summary>
            启用折叠动画效果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Checkbox(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            显示复选框
            </summary>
            <param name="onlyLeafCheck">仅显示叶节点复选框</param>
            <param name="cascadeCheck">级联选择复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.EnableDrag">
            <summary>
            启用拖拽
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Params(System.Object)">
            <summary>
            设置发送到远程Url的参数
            </summary>
            <param name="param">请求参数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.OnBeforeSelect(System.String)">
            <summary>
            设置选择前事件处理函数
            </summary>
            <param name="handler">选择前事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.OnSelect(System.String)">
            <summary>
            设置选择事件处理函数
            </summary>
            <param name="handler">选择事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.SelectLeafOnly">
            <summary>
            仅允许选择叶节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.OnContextMenu(System.String)">
            <summary>
            设置右键菜单事件处理函数
            </summary>
            <param name="handler">右键菜单事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="treeId">树Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.Click(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.RefreshPanel(System.String,System.String,System.String,System.String)">
            <summary>
            单击刷新面板
            </summary>
            <param name="panelId">面板编号</param>
            <param name="url">服务端Url</param>
            <param name="paramName">参数</param>
            <param name="fnCreateUrl">用于创建Url的回调函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.Tree.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.TreeNode">
            <summary>
            树节点
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Id">
            <summary>
            标识
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.ParentId">
            <summary>
            父标识
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Level">
            <summary>
            级数
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.Attributes">
            <summary>
            自定义扩展属性
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.state">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Util.Webs.EasyUi.Trees.TreeNode.children">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.TreeNodeState">
            <summary>
            树节点状态
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.TreeNodeState.Open">
            <summary>
            展开
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.TreeNodeState.Closed">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:Util.Webs.EasyUi.Trees.TreeOption">
            <summary>
            树选项
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.#ctor">
            <summary>
            初始化树选项
            </summary>
        </member>
        <member name="F:Util.Webs.EasyUi.Trees.TreeOption._builder">
            <summary>
            属性生成器
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.Url(System.String)">
            <summary>
            设置远程Url
            </summary>
            <param name="url">远程数据加载Url</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.Animate">
            <summary>
            启用折叠动画效果
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.Checkbox(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            显示复选框
            </summary>
            <param name="onlyLeafCheck">仅显示叶节点复选框</param>
            <param name="cascadeCheck">级联选择复选框</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.EnableDrag">
            <summary>
            启用拖拽
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.Params(System.Object)">
            <summary>
            设置发送到远程Url的参数
            </summary>
            <param name="param">请求参数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.OnBeforeSelect(System.String)">
            <summary>
            设置选择前事件处理函数
            </summary>
            <param name="handler">选择前事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.OnSelect(System.String)">
            <summary>
            设置选择事件处理函数
            </summary>
            <param name="handler">选择事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.SelectLeafOnly">
            <summary>
            仅允许选择叶节点
            </summary>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.OnContextMenu(System.String)">
            <summary>
            设置右键菜单事件处理函数
            </summary>
            <param name="handler">右键菜单事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.Menu(System.String,System.String)">
            <summary>
            设置右键菜单
            </summary>
            <param name="treeId">树Id</param>
            <param name="menuId">菜单Id</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.OnClick(System.String)">
            <summary>
            设置单击事件处理函数
            </summary>
            <param name="handler">单击事件处理函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.RefreshPanel(System.String,System.String,System.String,System.String)">
            <summary>
            单击刷新面板
            </summary>
            <param name="panelId">面板编号</param>
            <param name="url">服务端Url</param>
            <param name="paramName">参数</param>
            <param name="fnCreateUrl">用于创建Url的回调函数</param>
        </member>
        <member name="M:Util.Webs.EasyUi.Trees.TreeOption.GetResult">
            <summary>
            获取结果
            </summary>
        </member>
    </members>
</doc>
