@model IconDto
@{
    var x = @Html.EasyUi();
}
<script type="text/javascript">
    $(function () {
        $.easyui.deleteUrl = "/commons/icon/delete";
    });
</script>
@using ( x.Layout( true ).Begin() ) {
    @*工具栏区域*@
    using ( x.LayoutRegion().Top().Height( 65 ).Begin() ) {
        @*分类标题*@
        <div class="titlebar">
            <span class="title">当前分类：</span>
            <span>@Model.GetCategoryName()</span>
        </div>
        @*工具栏*@
        <div class="toolbar">
            @(x.DialogButton( "批量添加图标", "/commons/icon/batchAdd?categoryId=" + Model.CategoryId )
                .Icon( "icon-add" ).Plain().DialogSize( 1030, 510 ).DialogIcon( "icon-rainbow" )
                .Title( "批量添加图标——当前分类：" + Model.CategoryName ).OnInit( "validateCategoryId" )
            )
            @x.Button( "删除图标" ).Icon( "icon-delete" ).Plain().Delete()
            @x.DialogButton( "查看详细", "/commons/icon/detail" ).Id( "btnLook" ).Icon( "icon-look" ).Plain().DialogSize( 880, 280 ).ShowDetailDialog()
            @x.Button( "刷 新" ).Icon( "icon-refresh" ).Plain().Refresh()
        </div>
    }
    @*表格区域*@
    using ( x.LayoutRegion().Center().Begin() ) {
        @*右键菜单*@
        @x.Menu( "menuGrid" ).Click( "$.easyui.fnClickGridMenuItem_Form" ).Duration( 600 ).Items(
            x.MenuItem( "menuItem_Delete", "删 除", "icon-delete" ),
            x.MenuItem( "menuItem_Look", "查看详细", "icon-look" ),
            x.MenuItem( "menuItem_Refresh", "刷 新", "icon-refresh" )
        )
        @*查询表单*@
        @Html.Partial( "Parts/Icon.QueryForm", new IconQuery() )
        @*表格*@
        @(x.Grid( "grid" ).Sort( "CreateTime" ).Toolbar( "divQuery" ).Url( "/commons/icon/query?categoryId=" + Model.CategoryId )
            .ShowEditDialogByDblClick( "btnLook" ).Menu().Fit().FitColumns()
            .Columns(
                x.GridColumn( t => t.Id ).CheckBox(),
                x.GridColumn( t => t.CategoryName, 100 ),
                x.GridColumn( t => t.Icon, 35 ).FormatImage( 32, 32 ),
                x.GridColumn( t => t.Name, 180 ),
                x.GridColumn( t => t.ClassName, 200 ),
                x.GridColumn( t => t.Size, 80 ),
                x.GridColumn( t => t.Width, 50 ),
                x.GridColumn( t => t.Height, 50 ),
                x.GridColumn( t => t.CreateTime, 120 )
            )
        )
    }
}